/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:45:46 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.retention;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.RetentionStatisticsSummaryResponse;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.student.StudentsRetentionSummary;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary;
import br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RetentionStatisticsSummaryResponse_ESTest extends RetentionStatisticsSummaryResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(subjectsRetentionSummary0).toString();
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("", "", studentsRetentionSummary0, subjectsRetentionSummary0);
      SubjectsRetentionSummary subjectsRetentionSummary1 = retentionStatisticsSummaryResponse0.getSubjectsRetentionSummary();
      assertSame(subjectsRetentionSummary1, subjectsRetentionSummary0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse((String) null, (String) null, studentsRetentionSummary0, (SubjectsRetentionSummary) null);
      String string0 = retentionStatisticsSummaryResponse0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("(tC*!IheC&$<", "(tC*!IheC&$<", (StudentsRetentionSummary) null, subjectsRetentionSummary0);
      String string0 = retentionStatisticsSummaryResponse0.getCurriculumCode();
      assertEquals("(tC*!IheC&$<", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("|=j", "br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields", studentsRetentionSummary0, subjectsRetentionSummary0);
      String string0 = retentionStatisticsSummaryResponse0.getCourseCode();
      assertEquals("|=j", string0);
      assertEquals("br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields", retentionStatisticsSummaryResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("", "", studentsRetentionSummary0, subjectsRetentionSummary0);
      String string0 = retentionStatisticsSummaryResponse0.getCourseCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary", "br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields", studentsRetentionSummary0, (SubjectsRetentionSummary) null);
      retentionStatisticsSummaryResponse0.getSubjectsRetentionSummary();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary", retentionStatisticsSummaryResponse0.getCourseCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields", retentionStatisticsSummaryResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse((String) null, (String) null, studentsRetentionSummary0, (SubjectsRetentionSummary) null);
      StudentsRetentionSummary studentsRetentionSummary1 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      retentionStatisticsSummaryResponse0.setStudentsRetentionSummary(studentsRetentionSummary1);
      assertNull(retentionStatisticsSummaryResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary", "br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields", studentsRetentionSummary0, (SubjectsRetentionSummary) null);
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary", retentionStatisticsSummaryResponse0.getCourseCode());
      
      retentionStatisticsSummaryResponse0.setCourseCode("br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields");
      assertEquals("br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields", retentionStatisticsSummaryResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("u&MTX", "br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.RetentionStatisticsSummaryResponse", (StudentsRetentionSummary) null, subjectsRetentionSummary0);
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.RetentionStatisticsSummaryResponse", retentionStatisticsSummaryResponse0.getCurriculumCode());
      
      retentionStatisticsSummaryResponse0.setCurriculumCode("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.RetentionStatisticsSummaryResponse");
      assertEquals("u&MTX", retentionStatisticsSummaryResponse0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("]", "]", (StudentsRetentionSummary) null, subjectsRetentionSummary0);
      StudentsRetentionSummary studentsRetentionSummary0 = retentionStatisticsSummaryResponse0.getStudentsRetentionSummary();
      assertNull(studentsRetentionSummary0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("", "", studentsRetentionSummary0, subjectsRetentionSummary0);
      String string0 = retentionStatisticsSummaryResponse0.getCurriculumCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("]", "]", (StudentsRetentionSummary) null, subjectsRetentionSummary0);
      retentionStatisticsSummaryResponse0.setGlossary((RetentionGlossaryFields) null);
      assertEquals("]", retentionStatisticsSummaryResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = mock(SubjectsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse("]", "]", (StudentsRetentionSummary) null, subjectsRetentionSummary0);
      RetentionGlossaryFields retentionGlossaryFields0 = retentionStatisticsSummaryResponse0.getGlossary();
      assertNull(retentionGlossaryFields0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse((String) null, (String) null, studentsRetentionSummary0, (SubjectsRetentionSummary) null);
      retentionStatisticsSummaryResponse0.setSubjectsRetentionSummary((SubjectsRetentionSummary) null);
      assertNull(retentionStatisticsSummaryResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StudentsRetentionSummary studentsRetentionSummary0 = mock(StudentsRetentionSummary.class, new ViolatedAssumptionAnswer());
      RetentionStatisticsSummaryResponse retentionStatisticsSummaryResponse0 = new RetentionStatisticsSummaryResponse((String) null, "", studentsRetentionSummary0, (SubjectsRetentionSummary) null);
      String string0 = retentionStatisticsSummaryResponse0.getCourseCode();
      assertNull(string0);
  }
}
