/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:20:27 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CurriculumData_ESTest extends CurriculumData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getIdealOptionalCreditsList();
      curriculumData0.getAllSubjectsList();
      curriculumData0.setIdealMandatoryCreditsList("}z[");
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.setMinOptionalCreditsNeeded((-1188));
      curriculumData0.getMinElectiveCreditsNeeded();
      curriculumData0.getExceptionalAdditionalEnrolledCredits();
      curriculumData0.getMaxNumberOfTerms();
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(curriculumKey0).getCourseCode();
      doReturn("}z[").when(curriculumKey0).getCurriculumCode();
      curriculumData0.createCurriculum(curriculumKey0);
      curriculumData0.getOptionalSubjectCodes();
      curriculumData0.getIdealMandatoryCredits();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = null;
      CurriculumData curriculumData0 = new CurriculumData((String) null, (String) null, (String) null, (String) null, (-1044), (-1044), 0, (-1044), 0, 715, 773, 0, 773, (-2991), (String) null, (String) null, (String) null, (String) null, (String) null);
      curriculumData0.setMinActivitiesNeeded((-1044));
      curriculumData0.setIdealElectiveCreditsList((String) null);
      String string1 = null;
      curriculumData0.setComplementarySubjectCodes((String) null);
      curriculumData0.setExceptionalAdditionalEnrolledCredits((-1044));
      curriculumData0.setMaxNumberOfTerms(0);
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setMandatorySubjectCodes(string0);
      curriculumData0.setIdealOptionalCreditsList(string1);
      curriculumData0.setIdealComplementaryCreditsList(string0);
      curriculumData0.getMinComplementaryCreditsNeeded();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getMinOptionalCreditsNeeded();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMinNumberOfEnrolledCredits(0);
      curriculumData0.getMinMandatoryCreditsNeeded();
      curriculumData0.setMinNumberOfTerms(0);
      curriculumData0.getMinNumberOfTerms();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getAllSubjectsList();
      curriculumData0.setIdealComplementaryCreditsList("EM(fUa");
      curriculumData0.getExceptionalAdditionalEnrolledCredits();
      curriculumData0.getIdealElectiveCredits();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("%wf5g%", (String) null, (String) null, "%wf5g%", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, "%wf5g%", "r curri?lumCo ='", "%wf5g%", (String) null, (String) null);
      curriculumData0.setMinElectiveCreditsNeeded(1);
      curriculumData0.setElectiveSubjectCodes((String) null);
      curriculumData0.getComplementaryActivitiesCodes();
      curriculumData0.getIdealMandatoryCreditsList();
      curriculumData0.getMinActivitiesNeeded();
      curriculumData0.setMinNumberOfEnrolledCredits(1);
      curriculumData0.getIdealOptionalCredits();
      String string0 = "vd5Y,";
      curriculumData0.setIdealComplementaryCreditsList(string0);
      curriculumData0.getIdealMandatoryCredits();
      String string1 = "r? N";
      curriculumData0.setMandatorySubjectCodes(string1);
      // Undeclared exception!
      try { 
        curriculumData0.getIdealMandatoryCredits();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"%wf5g%\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", 1, 1, 1, (-27), (-724), 1, 1, (-724), (-27), 1159, ",", ",", ",", ",", ",");
      curriculumData0.setMinNumberOfTerms(1);
      curriculumData0.getExpectedMinAccumulatedCredits();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      int int0 = 0;
      curriculumData0.setMinComplementaryCreditsNeeded((-3182));
      curriculumData0.setMaxNumberOfEnrolledCredits(0);
      curriculumData0.setMinComplementaryCreditsNeeded((-3182));
      curriculumData0.getAllSubjectsList();
      curriculumData0.getIdealMandatoryCredits();
      // Undeclared exception!
      try { 
        curriculumData0.getIdealElectiveCredits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "wa*p#XA7KEKNzl!", (-1), (-1), (-1), (-1), (-1), (-4753), 2, 2, 2, 2, "", "", "", "", "uyIcOA");
      curriculumData0.getMinOptionalCreditsNeeded();
      curriculumData0.setMinMandatoryCreditsNeeded((-1));
      curriculumData0.setMinOptionalCreditsNeeded(2);
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.setMinNumberOfTerms(347);
      curriculumData0.setComplementaryActivitiesCodes("");
      curriculumData0.setOptionalSubjectCodes("uyIcOA");
      int int0 = 1072;
      curriculumData0.createCurriculum((CurriculumKey) null);
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setMinComplementaryCreditsNeeded(int0);
      curriculumData0.getMinOptionalCreditsNeeded();
      curriculumData0.getIdealElectiveCredits();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(", idealMandatoryCreditsList=", "", "", "", 939, 787, (-2257), 787, 787, 0, 939, 0, 19, 0, "", ", idealMandatoryCreditsList=", "757U", "", ", idealMandatoryCreditsList=");
      curriculumData0.getMaxNumberOfEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-17);
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-17), 1, (-3156), (-17), (-17), (-17), (-17), (-17), (-3156), 1, ",", "!", ",", "!", ",");
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getExpectedMinAccumulatedCredits(1);
      curriculumData0.getExpectedMinAccumulatedCredits(int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), 1, (-3156), (-27), (-27), (-27), (-27), (-27), 5, 1, ",", ",", ",", ",", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getExpectedMinAccumulatedCredits((-1320));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getMinComplementaryCreditsNeeded();
      curriculumData0.setMandatorySubjectCodes("gZ");
      curriculumData0.setMinActivitiesNeeded(0);
      curriculumData0.setOptionalSubjectCodes(", minNumberOfEnrolledCredits=");
      curriculumData0.setMinOptionalCreditsNeeded(27);
      curriculumData0.getIdealComplementaryCreditsList();
      curriculumData0.setIdealOptionalCreditsList((String) null);
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.setMinOptionalCreditsNeeded(27);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(27);
      curriculumData0.setMinActivitiesNeeded(1130);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = (-376);
      int int1 = 1578;
      String string0 = "Curriculum{courseCode='";
      CurriculumData curriculumData0 = new CurriculumData("3", "3", "3", "3", (-376), (-376), 1578, 1578, 1578, 1578, 1578, 1578, (-4391), (-376), "3", "", "", "Curriculum{courseCode='", "");
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setMaxNumberOfTerms(int1);
      curriculumData0.setMinMandatoryCreditsNeeded(int0);
      String string1 = ", maxNumberOfEnrolledCredits=";
      // Undeclared exception!
      try { 
        curriculumData0.setComplementaryActivitiesCodes(string1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", 2, 2, 2, 2, 2, 2, 2, 2, 681, 2, "", "", "", "", "");
      curriculumData0.setMinNumberOfTerms(681);
      curriculumData0.getIdealOptionalCreditsList();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMinNumberOfTerms(0);
      curriculumData0.getIdealElectiveCredits();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setComplementarySubjectCodes("AVK");
      curriculumData0.getIdealMandatoryCreditsList();
      curriculumData0.setMandatorySubjectCodes("AVK");
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.getIdealComplementaryCredits();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMinNumberOfTerms(39);
      curriculumData0.setIdealMandatoryCreditsList(", idealMandatoryCreditsList=");
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.getMaxNumberOfEnrolledCredits();
      // Undeclared exception!
      try { 
        curriculumData0.getMinComplementaryCreditsNeeded();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      String string0 = null;
      curriculumData0.setOptionalSubjectCodes((String) null);
      curriculumData0.setMaxNumberOfTerms((-2189));
      curriculumData0.setIdealOptionalCreditsList("");
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.setElectiveSubjectCodes(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMandatorySubjectCodes("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setMinMandatoryCreditsNeeded(4866);
      curriculumData0.setMaxNumberOfTerms(3324);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMinOptionalCreditsNeeded(1);
      curriculumData0.getIdealOptionalCredits();
      String string0 = "r3}rV0qU5/YD";
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getAllSubjectsList();
      curriculumData0.setMinComplementaryCreditsNeeded((-862));
      curriculumData0.getIdealMandatoryCreditsList();
      curriculumData0.setElectiveSubjectCodes((String) null);
      curriculumData0.setMaxNumberOfEnrolledCredits((-923));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      int int0 = 1701;
      curriculumData0.setMinNumberOfEnrolledCredits(1701);
      int int1 = 2198;
      curriculumData0.setMinActivitiesNeeded(2198);
      // Undeclared exception!
      try { 
        curriculumData0.getIdealMandatoryCredits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setComplementaryActivitiesCodes("");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setIdealElectiveCreditsList("G");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getMinElectiveCreditsNeeded();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getMaxNumberOfEnrolledCredits();
      // Undeclared exception!
      try { 
        curriculumData0.getExpectedMinAccumulatedCredits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMinElectiveCreditsNeeded(2512);
      curriculumData0.getIdealOptionalCredits();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("Xz#wW$", "Xz#wW$", "9xOn<!0n<djFh,", "Xz#wW$", 0, 617, 0, 0, 0, 0, 0, 0, 0, 617, "n?uu", "n?uu", ", maxNumberOfTerms=", (String) null, ", maxNumberOfTerms=");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getMaxNumberOfTerms();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMaxNumberOfEnrolledCredits((-4000));
      curriculumData0.getMandatorySubjectCodes();
      curriculumData0.getElectiveSubjectCodes();
      curriculumData0.setMandatorySubjectCodes("S");
      curriculumData0.setMinActivitiesNeeded(853);
      curriculumData0.getMandatorySubjectCodes();
      curriculumData0.getIdealComplementaryCredits();
      int int0 = 1095;
      curriculumData0.getIdealOptionalCredits();
      // Undeclared exception!
      try { 
        curriculumData0.setMaxNumberOfTerms(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(", idealMandatoryCreditsList=", "", "", "", 939, 787, (-2257), 787, 3101, 0, 939, 0, 1, (-2654), "", ", idealMandatoryCreditsList=", "75 7U|", "Oqe4fHuAS_MP", ", idealMandatoryCreditsList=");
      curriculumData0.getMaxNumberOfEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", 0, 0, (-181), 0, 0, (-3261), 66, (-181), 2, 2, "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey", (String) null, "9Vc");
      String string0 = "g#XGq,.y,N{@1\\& W$";
      curriculumData0.setIdealOptionalCreditsList("1");
      curriculumData0.setIdealElectiveCreditsList("g#XGq,.y,N{@1& W$");
      curriculumData0.setComplementarySubjectCodes("9Vc");
      curriculumData0.setMinOptionalCreditsNeeded(0);
      curriculumData0.setMinOptionalCreditsNeeded((-3261));
      curriculumData0.getMinElectiveCreditsNeeded();
      curriculumData0.setMinMandatoryCreditsNeeded((-181));
      curriculumData0.setElectiveSubjectCodes((String) null);
      curriculumData0.getMaxNumberOfEnrolledCredits();
      curriculumData0.setMinActivitiesNeeded(0);
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.setIdealElectiveCreditsList(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("I2*<2J", "Zy![R?+)h", ",", ",", 0, 2, 2, 0, 2, (-837), 125, (-837), 2, (-315), ",", ",", ",", "i$UD_ao", "f=8Vx-igw$cQ");
      curriculumData0.setMandatorySubjectCodes(", idealElectiveCreditsList=");
      curriculumData0.setIdealMandatoryCreditsList("");
      curriculumData0.setIdealMandatoryCreditsList("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setMinElectiveCreditsNeeded((-1));
      curriculumData0.getOptionalSubjectCodes();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(", idealComplementaryCreditsList=", ", idealComplementaryCreditsList=", "#-", "e'arlm^u`v", (-1454), (-1454), (-1454), (-919), 0, (-291), (-291), (-919), (-615), (-3051), ", idealComplementaryCreditsList=", "#-", "LI%rnG", "#-", "");
      curriculumData0.createCurriculum((CurriculumKey) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getMinNumberOfTerms();
      curriculumData0.getMinComplementaryCreditsNeeded();
      curriculumData0.setExceptionalAdditionalEnrolledCredits(0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      String string0 = "L\"*0yA%daNr%iR";
      curriculumData0.setComplementarySubjectCodes("L\"*0yA%daNr%iR");
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(curriculumKey0).getCourseCode();
      doReturn((String) null).when(curriculumKey0).getCurriculumCode();
      curriculumData0.setIdealOptionalCreditsList("YZ9R*9vzb=H{");
      curriculumData0.createCurriculum(curriculumKey0);
      // Undeclared exception!
      try { 
        curriculumData0.getIdealMandatoryCreditsList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      int int0 = (-589);
      curriculumData0.setMinComplementaryCreditsNeeded((-589));
      // Undeclared exception!
      try { 
        curriculumData0.getExpectedMinAccumulatedCredits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 1;
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", (-1367), (-1367), (-1367), (-1367), (-1367), (-1367), 2993, (-549), 1, (-616), "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "", ",");
      curriculumData0.setComplementaryActivitiesCodes("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setComplementarySubjectCodes("");
      String string0 = "";
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getIdealElectiveCredits();
      curriculumData0.setIdealElectiveCreditsList(string0);
      String string1 = "@9?=R~Hd,FI0Ttze.";
      curriculumData0.setComplementaryActivitiesCodes(string1);
      int int1 = 1849;
      // Undeclared exception!
      try { 
        curriculumData0.setMinOptionalCreditsNeeded(int1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      int int0 = 125;
      curriculumData0.setMinNumberOfTerms(125);
      curriculumData0.setMaxNumberOfTerms(125);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(0);
      curriculumData0.setMinNumberOfTerms((-1));
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.setMinElectiveCreditsNeeded(2907);
      String string0 = curriculumData0.getComplementarySubjectCodes();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.setIdealComplementaryCreditsList(string0);
      curriculumData0.getMinOptionalCreditsNeeded();
      String string1 = "";
      curriculumData0.setMandatorySubjectCodes(string1);
      // Undeclared exception!
      try { 
        curriculumData0.getIdealElectiveCreditsList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      int int0 = 0;
      // Undeclared exception!
      try { 
        curriculumData0.getIdealMandatoryCredits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setIdealElectiveCreditsList("GAGb(I}<];DPS,");
      curriculumData0.setIdealComplementaryCreditsList((String) null);
      curriculumData0.setExceptionalAdditionalEnrolledCredits((-1));
      curriculumData0.getMaxNumberOfEnrolledCredits();
      curriculumData0.getMinNumberOfEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      int int0 = 39;
      curriculumData0.setMaxNumberOfEnrolledCredits(39);
      String string0 = "AH#I4r\\B4`zG[KR6C4";
      curriculumData0.setMandatorySubjectCodes("AH#I4rB4`zG[KR6C4");
      curriculumData0.setIdealComplementaryCreditsList("");
      curriculumData0.setOptionalSubjectCodes("br.edu.ufcg.computacao.eureca.backend.core.models.Curriculum");
      curriculumData0.setMinActivitiesNeeded((-1758));
      String string1 = "";
      curriculumData0.setComplementaryActivitiesCodes("");
      curriculumData0.setIdealMandatoryCreditsList("");
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.getIdealElectiveCredits();
      curriculumData0.getMandatorySubjectCodes();
      String string2 = "8D.\\B:d)*vKv";
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getComplementarySubjectCodes();
      curriculumData0.setElectiveSubjectCodes((String) null);
      curriculumData0.setIdealElectiveCreditsList((String) null);
      curriculumData0.getMinActivitiesNeeded();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setIdealMandatoryCreditsList("");
      curriculumData0.getMinMandatoryCreditsNeeded();
      curriculumData0.getElectiveSubjectCodes();
      curriculumData0.setMandatorySubjectCodes((String) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setIdealComplementaryCreditsList("SU(+GF<:r8&s$l_oFG");
      curriculumData0.setMinComplementaryCreditsNeeded(796);
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.setExceptionalAdditionalEnrolledCredits(0);
      curriculumData0.setIdealComplementaryCreditsList("SU(+GF<:r8&s$l_oFG");
      curriculumData0.getExceptionalAdditionalEnrolledCredits();
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.setIdealElectiveCreditsList("SU(+GF<:r8&s$l_oFG");
      curriculumData0.setMaxNumberOfTerms(0);
      curriculumData0.getMinMandatoryCreditsNeeded();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getExpectedMinAccumulatedCredits((-1));
      // Undeclared exception!
      try { 
        curriculumData0.getMinComplementaryCreditsNeeded();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", 0, 0, 125, 0, 0, 0, 2486, 0, 0, (-1), "FAkpa", "", (String) null, "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.getIdealElectiveCredits();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setMandatorySubjectCodes("");
      curriculumData0.setMinOptionalCreditsNeeded(0);
      curriculumData0.getMinMandatoryCreditsNeeded();
      curriculumData0.getIdealElectiveCredits();
      curriculumData0.getMaxNumberOfTerms();
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("|k7akC6gZL'$PgyTx", "|k7akC6gZL'$PgyTx", "|k7akC6gZL'$PgyTx", ", idealElectiveCreditsList=", 4931, 4931, 4931, 0, 169, 169, 0, 169, 0, 0, ";&obW", "myz|[_UVr=[3I:2{s", "|k7akC6gZL'$PgyTx", "myz|[_UVr=[3I:2{s", ";&obW");
      curriculumData0.setMinElectiveCreditsNeeded(0);
      curriculumData0.getMinNumberOfTerms();
      curriculumData0.getMinActivitiesNeeded();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getOptionalSubjectCodes();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getAllSubjectsList();
      curriculumData0.setMinOptionalCreditsNeeded(0);
      curriculumData0.setComplementarySubjectCodes("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setMinMandatoryCreditsNeeded(0);
      curriculumData0.getAllSubjectsList();
      curriculumData0.setMandatorySubjectCodes("&/-y1$n7ln:)");
      curriculumData0.setIdealComplementaryCreditsList("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setMinNumberOfTerms(125);
      curriculumData0.setMinNumberOfTerms(125);
      curriculumData0.setMinNumberOfTerms(1173);
      curriculumData0.setMinActivitiesNeeded(1321);
      curriculumData0.setIdealComplementaryCreditsList("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey");
      curriculumData0.setIdealOptionalCreditsList("$gBGO$%t");
      curriculumData0.setMinActivitiesNeeded(0);
      curriculumData0.setMandatorySubjectCodes("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey");
      curriculumData0.setMinOptionalCreditsNeeded(2);
      curriculumData0.getElectiveSubjectCodes();
      curriculumData0.getMaxNumberOfEnrolledCredits();
      curriculumData0.setIdealMandatoryCreditsList("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey");
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(curriculumKey0).getCourseCode();
      doReturn((String) null).when(curriculumKey0).getCurriculumCode();
      curriculumData0.createCurriculum(curriculumKey0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = 0;
      int int1 = 607;
      String string0 = ", minNumberOfEnrolledCredits=";
      CurriculumData curriculumData0 = new CurriculumData("", "", "tKG>K]xvB", ", minOptionalCreditsNeeded=", 2830, 2830, 0, 0, 0, 607, (-1), (-1466), (-1), (-1), "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", ", minOptionalCreditsNeeded=", ", minNumberOfEnrolledCredits=", "D{hD*#fL");
      curriculumData0.setMinActivitiesNeeded((-1));
      int int2 = 1;
      curriculumData0.setMinElectiveCreditsNeeded(1);
      curriculumData0.setIdealElectiveCreditsList("tKG>K]xvB");
      curriculumData0.getAllSubjectsList();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.getElectiveSubjectCodes();
      String string1 = "bn|Ai";
      curriculumData0.setComplementarySubjectCodes(string1);
      curriculumData0.getIdealMandatoryCreditsList();
      int int3 = 2397;
      curriculumData0.setMinOptionalCreditsNeeded(int3);
      curriculumData0.getMinComplementaryCreditsNeeded();
      // Undeclared exception!
      try { 
        curriculumData0.setOptionalSubjectCodes(string0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getMaxNumberOfTerms();
      curriculumData0.getMinElectiveCreditsNeeded();
      curriculumData0.getMinActivitiesNeeded();
      curriculumData0.getIdealOptionalCreditsList();
      curriculumData0.setIdealMandatoryCreditsList(", minMandatoryCreditsNeeded=");
      curriculumData0.setIdealOptionalCreditsList((String) null);
      curriculumData0.getIdealComplementaryCredits();
      int int0 = (-3634);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", 2, 0, 0, (-3972), (-659), 1, 1, (-659), (-659), 2, "", "", "", "", "");
      curriculumData0.setComplementarySubjectCodes("");
      int int0 = 0;
      curriculumData0.setMinOptionalCreditsNeeded(0);
      String string0 = curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.getIdealOptionalCredits();
      int int1 = 0;
      curriculumData0.setMinNumberOfEnrolledCredits(int1);
      curriculumData0.getAllSubjectsList();
      curriculumData0.setMinNumberOfEnrolledCredits(int0);
      curriculumData0.getAllSubjectsList();
      curriculumData0.setComplementarySubjectCodes(string0);
      curriculumData0.getComplementaryActivitiesCodes();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("O__", "", "", "/.TL'a+{YK[", (-672), (-672), 1240, (-1), 0, 1240, 0, (-1), (-672), 0, "", "/.TL'a+{YK[", "O__", "/.TL'a+{YK[", "^_Tv0i:");
      curriculumData0.getMinComplementaryCreditsNeeded();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "b%Y:CAaPPZx+z`s.", 2049, 2049, 3104, 3104, 2049, 3104, 2324, 2324, 2324, (-703), ", optionalSubjectsList=", "3bHa`P zeL 7a++", "lH'bV|^::]1>JuW2:", ", idealComplementaryCreditsList=", ", idealComplementaryCreditsList=");
      curriculumData0.getIdealComplementaryCreditsList();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("ljLa-o0Q", "ljLa-o0Q", "ljLa-o0Q", "", (-1), 2, (-37), 2, 2, (-37), 0, 2, 2118, (-1), "", "ljLa-o0Q", "", ", optionalSubjectsList=", ", minElectiveCreditsNeeded=");
      curriculumData0.getIdealComplementaryCreditsList();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("g!$Nb", "g!$Nb", ",", ",", 0, 0, 0, 0, (-4161), (-4161), (-4161), 0, 842, 0, "g!$Nb", "g!$Nb", "9D::W", "9D::W", "9D::W");
      curriculumData0.getMinActivitiesNeeded();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "h~U]w0i#J&Q";
      CurriculumData curriculumData0 = new CurriculumData("", "", "", (String) null, (-1701), (-1766), (-1766), (-1766), 541, (-1701), (-1701), 2, 2, (-1701), "<W|v5>B\"3ex5eJ12", (String) null, (String) null, "h~U]w0i#J&Q", ",");
      curriculumData0.setMinOptionalCreditsNeeded(0);
      curriculumData0.setMinNumberOfTerms((-1766));
      curriculumData0.setExceptionalAdditionalEnrolledCredits((-600));
      curriculumData0.getExpectedMinAccumulatedCredits((-1766));
      curriculumData0.getIdealOptionalCredits();
      String string1 = "";
      curriculumData0.setComplementarySubjectCodes(string1);
      curriculumData0.setIdealOptionalCreditsList(string1);
      int int0 = (-1);
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      curriculumData0.createCurriculum(curriculumKey0);
      curriculumData0.setMaxNumberOfTerms(int0);
      curriculumData0.getMinOptionalCreditsNeeded();
      curriculumData0.getIdealMandatoryCredits();
      // Undeclared exception!
      try { 
        curriculumData0.setIdealComplementaryCreditsList(string0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", (-670), (-670), (-670), 2, 0, (-670), 0, (-1368), 0, 2, "", "z~KBQW}hbcR", ", minOptionalCreditsNeeded=", ", minOptionalCreditsNeeded=", "z~KBQW}hbcR");
      curriculumData0.setMinMandatoryCreditsNeeded((-1397));
      curriculumData0.getIdealMandatoryCreditsList();
      curriculumData0.getIdealElectiveCredits();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "||/ZZj)a=~WimZ'B*", 1423, 1423, 1423, (-1), 1423, 2, 0, 1074, (-1), 1423, "", ".[l[>&D%l", "||/ZZj)a=~WimZ'B*", "Eb0", "||/ZZj)a=~WimZ'B*");
      curriculumData0.getExceptionalAdditionalEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "m5g", (String) null, "", 0, 0, 0, 0, 0, 0, (-2666), (-583), (-3201), 1, (String) null, "CePa~qLXd d2", "m5g", ",", (String) null);
      curriculumData0.getMinOptionalCreditsNeeded();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", (-1789), (-1789), 2038, 2, 2, (-632), 0, 2, 0, 0, "", "", "", "", "");
      curriculumData0.getComplementaryActivitiesCodes();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setIdealOptionalCreditsList(", idealOptionalCreditsList=");
      curriculumData0.setElectiveSubjectCodes(", curriculumCode='");
      curriculumData0.getComplementaryActivitiesCodes();
      curriculumData0.setMinComplementaryCreditsNeeded(801);
      curriculumData0.getIdealElectiveCredits();
      curriculumData0.getExpectedMinAccumulatedCredits();
      int int0 = 0;
      // Undeclared exception!
      try { 
        curriculumData0.setMinComplementaryCreditsNeeded(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(", minElectiveCreditsNeeded=", "", "", ", minElectiveCreditsNeeded=", (-761), (-761), (-752), (-761), (-2009), (-44), (-44), (-761), 0, (-752), "}v!ppzh1kv8*", "", "N_;+2_I?{k`$1#'", "N_;+2_I?{k`$1#'", ",");
      curriculumData0.getOptionalSubjectCodes();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(".x4~(a[U5!", ".x4~(a[U5!", ".x4~(a[U5!", ".x4~(a[U5!", 4139, 4139, 0, 0, 0, 0, (-3241), 4139, 0, 0, ".x4~(a[U5!", ".x4~(a[U5!", ".x4~(a[U5!", "C063rDf<)~DE1iwF", "C063rDf<)~DE1iwF");
      curriculumData0.getComplementarySubjectCodes();
      curriculumData0.getExpectedMinAccumulatedCredits(0);
      int int0 = (-567);
      curriculumData0.setMinElectiveCreditsNeeded(int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData((String) null, (String) null, "GcG", (String) null, (-899), (-899), (-899), 2, 2, 125, 125, 125, 2, 125, "GcG", "2Gqp^$O[sAavIr bC", "", (String) null, "");
      curriculumData0.getMinOptionalCreditsNeeded();
      curriculumData0.setComplementarySubjectCodes("");
      curriculumData0.getIdealElectiveCredits();
      int int0 = 0;
      curriculumData0.setExceptionalAdditionalEnrolledCredits(int0);
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.getIdealComplementaryCreditsList();
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getMinOptionalCreditsNeeded();
      String string0 = "";
      curriculumData0.setIdealElectiveCreditsList(string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData((String) null, (String) null, (String) null, (String) null, 0, (-2885), 0, 0, 721, (-1802), (-2885), (-1802), (-405), 2525, "", "", ", minElectiveCreditsNeeded=", ", complementarySubjectsList=", ", minElectiveCreditsNeeded=");
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.setMinComplementaryCreditsNeeded((-405));
      curriculumData0.setIdealMandatoryCreditsList(", complementaryActivitiesList=");
      curriculumData0.setMinOptionalCreditsNeeded(1577);
      curriculumData0.getIdealElectiveCredits();
      int int0 = 1364;
      curriculumData0.setMaxNumberOfTerms(int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "", 967, 127, 127, 967, 0, 127, 2487, 0, 127, (-458), "\"0_^.", "", "e6l%5d@sob2(qJ", ", minOptionalCreditsNeeded=", "");
      curriculumData0.getExceptionalAdditionalEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "wa*p#XA7KpKNzl!", (-1), (-1), (-1), 426, 426, (-4758), (-425), (-425), (-836), (-425), "", "", "", "", "uyIcOA");
      curriculumData0.getMinMandatoryCreditsNeeded();
      curriculumData0.getMinOptionalCreditsNeeded();
      curriculumData0.setMinMandatoryCreditsNeeded((-1));
      curriculumData0.setMinOptionalCreditsNeeded(378);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(0);
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.setMinNumberOfTerms(347);
      curriculumData0.setComplementaryActivitiesCodes("");
      curriculumData0.setOptionalSubjectCodes("");
      curriculumData0.setMinComplementaryCreditsNeeded(1072);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = 0;
      int int1 = 1857;
      CurriculumData curriculumData0 = new CurriculumData(",", ",", "", ",", 0, 0, 1, 2082, 2082, (-673), 39, 39, 1857, (-728), "r|[3E{{F(xnn-VJ0Zk%", "r|[3E{{F(xnn-VJ0Zk%", ",", ",", "");
      curriculumData0.setIdealElectiveCreditsList("");
      curriculumData0.getMinNumberOfTerms();
      String string0 = null;
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setElectiveSubjectCodes(string0);
      curriculumData0.setComplementarySubjectCodes(string0);
      curriculumData0.setMinElectiveCreditsNeeded(int0);
      curriculumData0.setMinOptionalCreditsNeeded(int1);
      int int2 = (-6357);
      curriculumData0.setMinElectiveCreditsNeeded(int2);
      curriculumData0.getElectiveSubjectCodes();
      int int3 = 3617;
      curriculumData0.setMinComplementaryCreditsNeeded(int3);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.getMinComplementaryCreditsNeeded();
      curriculumData0.setMandatorySubjectCodes("gZ");
      curriculumData0.setMinActivitiesNeeded((-1196));
      curriculumData0.setOptionalSubjectCodes(", minNumberOfEnrolledCredits=");
      curriculumData0.setMinOptionalCreditsNeeded(27);
      curriculumData0.getIdealComplementaryCreditsList();
      curriculumData0.setIdealOptionalCreditsList((String) null);
      curriculumData0.setMinOptionalCreditsNeeded(27);
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.setMinOptionalCreditsNeeded(27);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(0);
      curriculumData0.setMinActivitiesNeeded(1130);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 706;
      CurriculumData curriculumData0 = new CurriculumData("*eh", ".a64YF@bShj]", "*eh", (String) null, 0, 0, (-1), 0, (-1), 0, 0, 1, 0, 706, "*eh", "eJ,,PryPU;sCPR!]$H", ", mandatorySubjectsList=", ", mandatorySubjectsList=", "");
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.setElectiveSubjectCodes("eJ,,PryPU;sCPR!]$H");
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.getIdealOptionalCreditsList();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getIdealComplementaryCredits();
      int int1 = (-646);
      curriculumData0.setMaxNumberOfEnrolledCredits(int1);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(int0);
      curriculumData0.getIdealOptionalCredits();
      int int2 = 1;
      curriculumData0.setExceptionalAdditionalEnrolledCredits(int2);
      curriculumData0.getMaxNumberOfTerms();
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", "", ":DJM4,cbtpTp>OXe", "", 673, 673, 673, 1756, 1756, 2, 1756, 673, 1756, 2, "", "", ":DJM4,cbtpTp>OXe", "0CM]/q;Eh.j`;BE", "");
      curriculumData0.setMinComplementaryCreditsNeeded(1756);
      curriculumData0.setComplementaryActivitiesCodes(",");
      curriculumData0.getMinMandatoryCreditsNeeded();
      curriculumData0.setIdealComplementaryCreditsList("");
      curriculumData0.setMinActivitiesNeeded((-990));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = 1;
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "{MX`X[[8-{+]Hat-R+", 1682, 1, 1, (-1), 1682, 39, 39, (-1), 1893, (-1), "", "", ", idealOptionalCreditsList=", ", idealOptionalCreditsList=", "");
      String string0 = curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.getMinElectiveCreditsNeeded();
      curriculumData0.getMinActivitiesNeeded();
      curriculumData0.setMinOptionalCreditsNeeded((-1));
      curriculumData0.getIdealMandatoryCreditsList();
      curriculumData0.setMaxNumberOfEnrolledCredits(1818);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(1818);
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.setComplementarySubjectCodes(string0);
      int int1 = 2;
      curriculumData0.getExpectedMinAccumulatedCredits(int1);
      int int2 = (-1);
      curriculumData0.setMinNumberOfEnrolledCredits(int2);
      curriculumData0.setMaxNumberOfTerms(int0);
      curriculumData0.getMaxNumberOfEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(", complementarySubjectsList=", ", complementarySubjectsList=", "", "", (-2697), (-2697), (-2697), (-2697), (-2697), (-895), (-2520), (-2697), (-521), (-2697), "QP", ", complementarySubjectsList=", "QP", "", "");
      curriculumData0.getComplementarySubjectCodes();
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("'B(\u0006r,w", "z0^Jh<bz@4hf%rAsi", "\u0003]Fj<')4U0|V#meR", ", optionalSubjectsList=", (-3311), (-3311), (-3311), (-3311), (-3311), 3428, 2345, (-1125), (-1416), 3428, "", "l", "\u0003]Fj<')4U0|V#meR", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "\u0003]Fj<')4U0|V#meR");
      curriculumData0.getMaxNumberOfTerms();
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "^1oM~]6k$b5d8iE", "^1oM~]6k$b5d8iE", 0, 0, 0, 0, 1512, (-1), (-1), 1, 1, (-2783), "^1oM~]6k$b5d8iE", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "^1oM~]6k$b5d8iE", ", idealMandatoryCreditsList=", "");
      curriculumData0.getMinNumberOfEnrolledCredits();
      curriculumData0.setElectiveSubjectCodes("=Eb/8^YDC-|$");
      curriculumData0.getComplementaryActivitiesCodes();
      curriculumData0.setExceptionalAdditionalEnrolledCredits((-1297));
      curriculumData0.getComplementaryActivitiesCodes();
      curriculumData0.setComplementarySubjectCodes("]'(/5kD7H]uI$e");
      curriculumData0.getIdealComplementaryCreditsList();
      curriculumData0.getIdealComplementaryCredits();
      String string0 = " %";
      curriculumData0.setElectiveSubjectCodes(string0);
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.getComplementarySubjectCodes();
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData();
      curriculumData0.setIdealComplementaryCreditsList(":");
      curriculumData0.setMinNumberOfEnrolledCredits(0);
      int int0 = 0;
      curriculumData0.setMinNumberOfTerms(0);
      curriculumData0.setIdealComplementaryCreditsList(":");
      curriculumData0.setIdealComplementaryCreditsList(" m,.l);Z$>gfP}P4z<");
      curriculumData0.setMinNumberOfEnrolledCredits((-714));
      curriculumData0.setMinComplementaryCreditsNeeded(2);
      curriculumData0.getMinComplementaryCreditsNeeded();
      curriculumData0.getAllSubjectsList();
      curriculumData0.setIdealComplementaryCreditsList(" m,.l);Z$>gfP}P4z<");
      curriculumData0.setIdealElectiveCreditsList("n<BGY.");
      curriculumData0.setMinNumberOfEnrolledCredits((-1728));
      curriculumData0.createCurriculum((CurriculumKey) null);
      String string0 = ",";
      curriculumData0.setComplementarySubjectCodes(string0);
      int int1 = 0;
      curriculumData0.setMinElectiveCreditsNeeded(int1);
      curriculumData0.setMaxNumberOfEnrolledCredits(int0);
      String string1 = "Zco dzx%'=\"j";
      curriculumData0.getIdealElectiveCredits();
      // Undeclared exception!
      try { 
        curriculumData0.setIdealComplementaryCreditsList(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = (-692);
      CurriculumData curriculumData0 = new CurriculumData("%wf5g%", (String) null, "", "ii ", 1, 1, (-1), 1, 0, (-692), 1, (-692), 1, 1, "%wf5g%", ", curriculumCode='", "%wf5g%", (String) null, "X\"py8Ua5hv6~)ivm");
      curriculumData0.setMinElectiveCreditsNeeded(1955);
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.getComplementaryActivitiesCodes();
      curriculumData0.getIdealMandatoryCreditsList();
      curriculumData0.getMinActivitiesNeeded();
      curriculumData0.setMandatorySubjectCodes("Z+Te[PSu|-qkzn%vYph");
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.setMinNumberOfEnrolledCredits(int0);
      curriculumData0.getMinActivitiesNeeded();
      curriculumData0.getIdealOptionalCredits();
      String string0 = "vd5Y,";
      curriculumData0.setIdealComplementaryCreditsList(string0);
      curriculumData0.getIdealMandatoryCredits();
      String string1 = "r? N";
      curriculumData0.setMandatorySubjectCodes(string1);
      curriculumData0.getIdealMandatoryCredits();
      int int1 = 919;
      curriculumData0.setMinComplementaryCreditsNeeded(int1);
      curriculumData0.getMinNumberOfEnrolledCredits();
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", ":LOmQd", (String) null, ":LOmQd", 0, 0, 1723, 4653, 1723, (-1), (-1021), 5, 0, (-1), "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "", "*l?6b?Z?5", "", "@&hO@b&g");
      curriculumData0.getMaxNumberOfTerms();
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("'B(\u0006r,w", "z0^Jh<bz@4hf%rAsi", "\u0003]Fj<')4U0|V#meR", ", option ESubjectsList=", (-3311), (-3311), (-3311), (-3311), (-3311), 3428, 2345, (-1125), (-1416), 3428, "", "l", "\u0003]Fj<')4U0|V#meR", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "\u0003]Fj<')4U0|V#meR");
      curriculumData0.getMaxNumberOfTerms();
      curriculumData0.getElectiveSubjectCodes();
      curriculumData0.getMaxNumberOfEnrolledCredits();
      curriculumData0.getExpectedMinAccumulatedCredits();
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", "wa*p#XA7KpKNzl!", (-1), (-1), (-1), (-1), (-1), (-4758), (-425), (-425), (-836), (-425), "", "", "", "", "uyIcOA");
      curriculumData0.getMinMandatoryCreditsNeeded();
      curriculumData0.getMinOptionalCreditsNeeded();
      curriculumData0.setMinMandatoryCreditsNeeded((-1));
      curriculumData0.setMinOptionalCreditsNeeded(378);
      curriculumData0.setExceptionalAdditionalEnrolledCredits(0);
      curriculumData0.getIdealElectiveCreditsList();
      curriculumData0.setMinNumberOfTerms(347);
      curriculumData0.setComplementaryActivitiesCodes("");
      curriculumData0.setOptionalSubjectCodes("uyIcOA");
      curriculumData0.setMinComplementaryCreditsNeeded(1072);
      curriculumData0.getMinOptionalCreditsNeeded();
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "", ", complementarySubjectsList=", 2, 0, 2525, 0, 0, 254, 2, 2, 1401, 2533, "", "", "", "+?k*.D=@Z\">p", "+?k*.D=@Z\">p");
      curriculumData0.setIdealMandatoryCreditsList((String) null);
      curriculumData0.getElectiveSubjectCodes();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("", "", "azL3<W|LIlT8p1akut", "azL3<W|LIlT8p1akut", 52, 52, 52, (-2934), (-1), (-923), 945, 52, (-1), 489, "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "");
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.getMaxNumberOfTerms();
      curriculumData0.getMandatorySubjectCodes();
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), 1, (-3156), (-27), (-27), (-27), (-27), (-27), 5, 1, ",", "", ",", "", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getIdealOptionalCredits();
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(curriculumKey0).getCourseCode();
      doReturn((String) null).when(curriculumKey0).getCurriculumCode();
      curriculumData0.createCurriculum(curriculumKey0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), 1, (-3156), (-27), (-27), (-27), (-27), (-27), 5, 1, ",", "", ",", "", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.setElectiveSubjectCodes("");
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getIdealMandatoryCredits();
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), 1, (-3156), (-27), (-27), (-27), (-27), (-27), 12, 1, ",", "", ",", "", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getIdealElectiveCredits();
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getAllSubjectsList();
      curriculumData0.getIdealElectiveCredits();
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), (-15), (-3156), (-27), (-27), (-27), (-27), (-27), 5, (-15), ",", "", ",", "", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getExpectedMinAccumulatedCredits();
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", 1, 1, 1822, (-27), (-723), 1822, 1, (-723), (-27), 1135, "!'<HzaJO UZ2nR`", "!'<HzaJO UZ2nR`", ",", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setMinNumberOfTerms(1822);
      curriculumData0.getExpectedMinAccumulatedCredits();
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), 1, (-3156), (-27), (-27), (-27), (-27), (-27), 5, 1, ",", "!", ",", "!", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getExpectedMinAccumulatedCredits(5);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", 1, 1, 1822, (-27), (-723), 1822, 1, (-723), (-27), 1135, "!'<HzaJO UZ2nR`", "!'<HzaJO UZ2nR`", ",", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.setIdealComplementaryCreditsList(",");
      curriculumData0.setMinNumberOfTerms(1822);
      curriculumData0.getIdealElectiveCredits();
      curriculumData0.getExpectedMinAccumulatedCredits();
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      int int0 = (-376);
      int int1 = (-926);
      int int2 = 2393;
      String string0 = "Curriculum{courseCode='";
      CurriculumData curriculumData0 = new CurriculumData("3", "3", "3", "3", (-376), (-376), 1578, (-926), (-926), 1578, 2393, 2393, (-4391), (-376), "3", "", "", "Curriculum{courseCode='", "");
      curriculumData0.setMinActivitiesNeeded((-926));
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setMaxNumberOfTerms(int2);
      curriculumData0.setMinMandatoryCreditsNeeded(int1);
      String string1 = ", maxNumberOfEnrolledCredits=";
      curriculumData0.setComplementaryActivitiesCodes(string1);
      // Undeclared exception!
      try { 
        curriculumData0.getIdealComplementaryCredits();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      int int0 = 5;
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-27), 1, (-3156), (-27), (-27), (-27), (-27), (-27), 5, 1, ",", "!", ",", "!", ",");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.setMandatorySubjectCodes("X?R}z^L?pY!J");
      curriculumData0.getExpectedMinAccumulatedCredits((-13));
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getExpectedMinAccumulatedCredits(int0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      int int0 = (-1913);
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", (-1195), (-1195), (-1195), (-1195), 804, 804, (-1), (-1195), 39, (-1913), "-F;%VLgSmhrp", ",", ",", ",", "-F;%VLgSmhrp");
      curriculumData0.setMinNumberOfEnrolledCredits((-27));
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getExpectedMinAccumulatedCredits(int0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData(",", ",", ",", ",", 1, 1, 1, (-27), (-723), 1, 1, (-723), (-27), 1135, "!'<HzaJO UZ2nR`", "!'<HzaJO UZ2nR`", ",", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumData");
      curriculumData0.getIdealOptionalCredits();
      curriculumData0.getAllSubjectsList();
      int int0 = 1578;
      curriculumData0.setMaxNumberOfEnrolledCredits(int0);
      curriculumData0.getExpectedMinAccumulatedCredits();
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      CurriculumData curriculumData0 = new CurriculumData("3", "3", "3", "3", (-376), (-376), (-376), (-376), (-376), (-376), 2393, 2393, (-4391), (-376), "3", "", "", "Curriculum{courseCode='", "");
      curriculumData0.setMinActivitiesNeeded((-376));
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setMaxNumberOfTerms(2393);
      curriculumData0.setMinMandatoryCreditsNeeded((-376));
      curriculumData0.setComplementaryActivitiesCodes(", maxNumberOfEnrolledCredits=");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.setMinNumberOfEnrolledCredits((-376));
      curriculumData0.setMinComplementaryCreditsNeeded(550);
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.setMaxNumberOfTerms(8);
      curriculumData0.setOptionalSubjectCodes("Curriculum{courseCode='");
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.getIdealMandatoryCredits();
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(curriculumKey0).getCourseCode();
      doReturn((String) null).when(curriculumKey0).getCurriculumCode();
      curriculumData0.createCurriculum(curriculumKey0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      int int0 = (-376);
      String string0 = "Curriculum{courseCode='";
      CurriculumData curriculumData0 = new CurriculumData("3", "3", "3", "3", (-376), (-376), 1578, (-934), (-934), 1578, 2393, 2393, (-4391), (-376), "3", "", "", "Curriculum{courseCode='", "");
      curriculumData0.setMinActivitiesNeeded((-934));
      curriculumData0.setMaxNumberOfTerms(2393);
      curriculumData0.setMinMandatoryCreditsNeeded((-934));
      curriculumData0.setComplementaryActivitiesCodes(", maxNumberOfEnrolledCredits=");
      curriculumData0.getIdealComplementaryCredits();
      curriculumData0.setMinNumberOfEnrolledCredits(int0);
      int int1 = 550;
      curriculumData0.setMinComplementaryCreditsNeeded(int1);
      curriculumData0.getIdealMandatoryCredits();
      curriculumData0.getIdealComplementaryCredits();
      int int2 = 8;
      curriculumData0.setMaxNumberOfTerms(int2);
      // Undeclared exception!
      try { 
        curriculumData0.setOptionalSubjectCodes(string0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      int int0 = (-376);
      int int1 = (-926);
      int int2 = 2393;
      String string0 = "Curriculum{courseCode='";
      CurriculumData curriculumData0 = new CurriculumData("3", "3", "3", "3", (-376), (-376), 1578, (-926), (-926), 1578, 2393, 2393, (-4391), (-376), "3", "", "", "Curriculum{courseCode='", "");
      CurriculumKey curriculumKey0 = mock(CurriculumKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(curriculumKey0).getCourseCode();
      doReturn((String) null).when(curriculumKey0).getCurriculumCode();
      curriculumData0.createCurriculum(curriculumKey0);
      curriculumData0.setMinActivitiesNeeded(int1);
      curriculumData0.getExpectedMinAccumulatedCredits();
      curriculumData0.setMaxNumberOfTerms(int2);
      // Undeclared exception!
      try { 
        curriculumData0.setMinMandatoryCreditsNeeded(int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
