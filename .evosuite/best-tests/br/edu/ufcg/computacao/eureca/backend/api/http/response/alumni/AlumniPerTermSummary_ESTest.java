/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:42:10 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlumniPerTermSummary_ESTest extends AlumniPerTermSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1050), (-1050), 0.0, 0.0);
      alumniPerTermSummary0.getTerm();
      assertEquals((-1050), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1050.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-4520), (-4520), (-4520), (-127.2609));
      alumniPerTermSummary0.getTerm();
      assertEquals((-4520), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-127.2609), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-4520.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-4520.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("(<|ur3s-`IO/#", 0, 0.0, (-2665.132390453805), 0);
      alumniPerTermSummary0.getGraduationTerm();
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-2665.132390453805), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-4520), (-4520), (-4520), (-127.2609));
      alumniPerTermSummary0.getGraduationTerm();
      assertEquals((-4520.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-4520.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-127.2609), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-4520), alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("IZ|}oGX", 0, 0, 0, 1.0);
      double double0 = alumniPerTermSummary0.getAverageTerms();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals(1.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary", 3834, 0.0, (-2013.95), 0.0);
      double double0 = alumniPerTermSummary0.getAverageTerms();
      assertEquals((-2013.95), double0, 0.01);
      assertEquals(3834, alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("PBf)jq`", 584, 584, 584, 584);
      double double0 = alumniPerTermSummary0.getAverageGpa();
      assertEquals(584.0, double0, 0.01);
      assertEquals(584.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(584.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals(584, alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("Ctz*_r!b|Svy", (-1630), (-1630), (-1791.7297677374), (-1791.7297677374));
      double double0 = alumniPerTermSummary0.getAverageGpa();
      assertEquals((-1791.7297677374), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-1630.0), double0, 0.01);
      assertEquals((-1630), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1791.7297677374), alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, 0, 0.0, 0.0);
      double double0 = alumniPerTermSummary0.getAverageCost();
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-3698), 0.0, 0.0, (-3698));
      double double0 = alumniPerTermSummary0.getAverageCost();
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-3698.0), double0, 0.01);
      assertEquals((-3698), alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-2826), (-2826), 1.0, 720.88648);
      alumniPerTermSummary0.setAlumniCount(0);
      int int0 = alumniPerTermSummary0.getAlumniCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 298, (-634.20183), (-634.20183), (-634.20183));
      int int0 = alumniPerTermSummary0.getAlumniCount();
      assertEquals(298, int0);
      assertEquals((-634.20183), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-634.20183), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-634.20183), alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("IZ|}oGX", 0, 0, 0, 1.0);
      alumniPerTermSummary0.compareTo(alumniPerTermSummary0);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(1.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary(",w{C`", 768, 1.0, 1.0, 768);
      AlumniPerTermSummary alumniPerTermSummary1 = new AlumniPerTermSummary(")^/d|9", 0, (-489.3078074), (-1660.4139720152455), 768);
      int int0 = alumniPerTermSummary0.compareTo(alumniPerTermSummary1);
      assertEquals((-489.3078074), alumniPerTermSummary1.getAverageGpa(), 0.01);
      assertEquals(768.0, alumniPerTermSummary1.getAverageCost(), 0.01);
      assertEquals((-1660.4139720152455), alumniPerTermSummary1.getAverageTerms(), 0.01);
      assertEquals(768, alumniPerTermSummary0.getAlumniCount());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-4520), (-4520), (-4520), (-127.2609));
      AlumniPerTermSummary alumniPerTermSummary1 = new AlumniPerTermSummary(" ]v>EY0-", 0, (-127.2609), (-4520), 2616.9);
      int int0 = alumniPerTermSummary0.compareTo(alumniPerTermSummary1);
      assertEquals((-4520), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-127.2609), alumniPerTermSummary1.getAverageGpa(), 0.01);
      assertEquals((-4520.0), alumniPerTermSummary1.getAverageTerms(), 0.01);
      assertEquals(2616.9, alumniPerTermSummary1.getAverageCost(), 0.01);
      assertEquals((-8), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1140), (-1140), 359.93107, 359.93107);
      // Undeclared exception!
      try { 
        alumniPerTermSummary0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1140), (-1140), 359.93107, 359.93107);
      alumniPerTermSummary0.getGraduationTerm();
      assertEquals((-1140.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(359.93107, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals(359.93107, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1140), alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-2826), (-2826), 1.0, 720.88648);
      int int0 = alumniPerTermSummary0.getAlumniCount();
      assertEquals(720.88648, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-2826), int0);
      assertEquals((-2826.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(1.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1998), (-1998), (-1998), 1.0);
      double double0 = alumniPerTermSummary0.getAverageCost();
      assertEquals(1.0, double0, 0.01);
      assertEquals((-1998), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1998.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1998.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1998), (-1998), (-1998), 1.0);
      alumniPerTermSummary0.setAverageTerms(1545.3633453);
      assertEquals(1545.3633453, alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-2826), (-2826), 1.0, 720.88648);
      alumniPerTermSummary0.setGraduationTerm("7S%U>u},RSBt3D*");
      assertEquals((-2826.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-2826), alumniPerTermSummary0.getAlumniCount());
      assertEquals(1.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(720.88648, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, 0.0, (-266.2129990499), 0.0);
      double double0 = alumniPerTermSummary0.getAverageGpa();
      assertEquals((-266.2129990499), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 1645, 1645, (-175.7095586341077), (-175.7095586341077));
      // Undeclared exception!
      try { 
        alumniPerTermSummary0.compareTo("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-2826), (-2826), 1.0, 720.88648);
      assertEquals((-2826.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      
      alumniPerTermSummary0.setAverageGpa(1.0);
      assertEquals(1.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-2826), (-2826), 1.0, 720.88648);
      assertEquals(720.88648, alumniPerTermSummary0.getAverageCost(), 0.01);
      
      alumniPerTermSummary0.setAverageCost(1.0);
      assertEquals(1.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("#Q~\"t:^p+-g2tYzx", (-2681), (-1.0), 1.0, (-2681));
      alumniPerTermSummary0.getTerm();
      assertEquals(1.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-2681), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-2681.0), alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", (-2826), (-2826), 1.0, 720.88648);
      double double0 = alumniPerTermSummary0.getAverageTerms();
      assertEquals(720.88648, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-2826.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-2826), alumniPerTermSummary0.getAlumniCount());
      assertEquals(1.0, double0, 0.01);
  }
}
