/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:24:46 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.DetailedSubjectDemand;
import br.edu.ufcg.computacao.eureca.backend.core.models.Subject;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DetailedSubjectDemand_ESTest extends DetailedSubjectDemand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Subject subject0 = mock(Subject.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(subject0).getName();
      doReturn((String) null).when(subject0).getSubjectCode();
      DetailedSubjectDemand detailedSubjectDemand0 = null;
      try {
        detailedSubjectDemand0 = new DetailedSubjectDemand(subject0, (Map<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.DetailedSubjectDemand", e);
      }
  }
}
