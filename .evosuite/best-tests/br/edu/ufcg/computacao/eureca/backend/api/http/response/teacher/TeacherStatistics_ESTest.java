/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:44:58 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TeacherStatistics_ESTest extends TeacherStatistics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("\"", "\"", "", "\"", "", (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherName();
      assertEquals("", teacherStatistics0.getTeacherEmail());
      assertEquals("\"", string0);
      assertEquals("", teacherStatistics0.getTeacherId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("'~FX|Q", "'~FX|Q", "", "'~FX|Q", "", (Collection<TeacherStatisticsPerTerm>) null);
      assertEquals("'~FX|Q", teacherStatistics0.getTeacherName());
      
      teacherStatistics0.setTeacherName("");
      teacherStatistics0.getTeacherName();
      assertEquals("", teacherStatistics0.getTeacherId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("/9I-/_D2", "/9I-/_D2", "/9I-/_D2", "/9I-/_D2", "/9I-/_D2", (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherId();
      assertEquals("/9I-/_D2", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("", "", "", "WfP1<IgX{*tDW", "WfP1<IgX{*tDW", (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherId();
      assertEquals("WfP1<IgX{*tDW", teacherStatistics0.getTeacherEmail());
      assertEquals("", string0);
      assertEquals("WfP1<IgX{*tDW", teacherStatistics0.getTeacherName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", "br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", "br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", "br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", "br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherEmail();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("", "", "", "", "", (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("\"", "\"", "", "\"", "", (Collection<TeacherStatisticsPerTerm>) null);
      teacherStatistics0.compareTo(teacherStatistics0);
      assertEquals("", teacherStatistics0.getTeacherEmail());
      assertEquals("\"", teacherStatistics0.getTeacherName());
      assertEquals("", teacherStatistics0.getTeacherId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", "", (Collection<TeacherStatisticsPerTerm>) null);
      TeacherStatistics teacherStatistics1 = new TeacherStatistics("", "", "", "", "", (Collection<TeacherStatisticsPerTerm>) null);
      int int0 = teacherStatistics0.compareTo(teacherStatistics1);
      assertEquals("", teacherStatistics0.getTeacherEmail());
      assertEquals(88, int0);
      assertEquals("", teacherStatistics0.getTeacherId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("RtY0]M*66<", "RtY0]M*66<", "RtY0]M*66<", "RtY0]M*66<", "RtY0]M*66<", (Collection<TeacherStatisticsPerTerm>) null);
      TeacherStatistics teacherStatistics1 = new TeacherStatistics("RtY0]M*66<", "[N1BR||V,Y", "", "br.edu.ufcg.computacao.eureca.backend.core.models.Range", "", (Collection<TeacherStatisticsPerTerm>) null);
      int int0 = teacherStatistics0.compareTo(teacherStatistics1);
      assertEquals("", teacherStatistics1.getTeacherEmail());
      assertEquals((-16), int0);
      assertEquals("", teacherStatistics1.getTeacherId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, "", "~]>mY`3'_[l", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherName();
      assertEquals("~]>mY`3'_[l", teacherStatistics0.getTeacherId());
      assertNull(string0);
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", teacherStatistics0.getTeacherEmail());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      Collection<TeacherStatisticsPerTerm> collection0 = teacherStatistics0.getTerms();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      // Undeclared exception!
      try { 
        teacherStatistics0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      teacherStatistics0.setTerms((Collection<TeacherStatisticsPerTerm>) null);
      assertNull(teacherStatistics0.getFrom());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      teacherStatistics0.setTeacherId((String) null);
      assertNull(teacherStatistics0.getFrom());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      teacherStatistics0.setTeacherEmail((String) null);
      assertNull(teacherStatistics0.getTeacherEmail());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics((String) null, (String) null, (String) null, (String) null, (String) null, (Collection<TeacherStatisticsPerTerm>) null);
      String string0 = teacherStatistics0.getTeacherId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TeacherStatistics teacherStatistics0 = new TeacherStatistics("", "", "", "", "o1n4>9-D", (Collection<TeacherStatisticsPerTerm>) null);
      // Undeclared exception!
      try { 
        teacherStatistics0.compareTo("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatistics", e);
      }
  }
}
