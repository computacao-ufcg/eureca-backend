/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:31:09 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectDemand_ESTest extends SubjectDemand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("uP\"LpJNhz", "uP\"LpJNhz", 0);
      int int0 = subjectDemand0.getTotalDemand();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("", "", (-954));
      int int0 = subjectDemand0.getTotalDemand();
      assertEquals((-954), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand((String) null, (String) null, 1);
      subjectDemand0.getSubjectName();
      assertEquals(1, subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("", "", 0);
      subjectDemand0.getSubjectName();
      assertEquals(0, subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand((String) null, (String) null, (-1412));
      subjectDemand0.getSubjectCode();
      assertEquals((-1412), subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("", "", (-1307));
      subjectDemand0.getSubjectCode();
      assertEquals((-1307), subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand(")h7a_6,cQ'N", "7WT", 1181);
      SubjectDemand subjectDemand1 = new SubjectDemand(")h7a_6,cQ'N", ".hf6*=SctP\"", (-2507));
      int int0 = subjectDemand0.compareTo(subjectDemand1);
      assertEquals(")h7a_6,cQ'N", subjectDemand1.getSubjectCode());
      assertEquals(3688, int0);
      assertEquals(".hf6*=SctP\"", subjectDemand1.getSubjectName());
      assertEquals((-2507), subjectDemand1.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand(";xh?J;Ee5#xU.V^(a.m", ";xh?J;Ee5#xU.V^(a.m", 1146);
      SubjectDemand subjectDemand1 = new SubjectDemand(";xh?J;Ee5#xU.V^(a.m", ";xh?J;Ee5#xU.V^(a.m", 1585);
      int int0 = subjectDemand0.compareTo(subjectDemand1);
      assertEquals((-439), int0);
      assertEquals(1585, subjectDemand1.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand((String) null, (String) null, 1);
      // Undeclared exception!
      try { 
        subjectDemand0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand(";xh?J;Ee5#xU.V^(a.m", ";xh?J;Ee5#xU.V^(a.m", 1146);
      // Undeclared exception!
      try { 
        subjectDemand0.compareTo("DetailedSubjectDemand{subjectCode=';xh?J;Ee5#xU.V^(a.m', subjectName=';xh?J;Ee5#xU.V^(a.m', totalDemand=1146}");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand(";xh?J;Ee5#xU.V^(a.m", ";xh?J;Ee5#xU.V^(a.m", 1146);
      int int0 = subjectDemand0.getTotalDemand();
      assertEquals(1146, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("DetailedSubjectDemand{subjectCode='", "DetailedSubjectDemand{subjectCode='", (-1854));
      subjectDemand0.getSubjectCode();
      assertEquals((-1854), subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("DetailedSubjectDemand{subjectCode='", "DetailedSubjectDemand{subjectCode='", (-1854));
      String string0 = subjectDemand0.toString();
      assertEquals("DetailedSubjectDemand{subjectCode='DetailedSubjectDemand{subjectCode='', subjectName='DetailedSubjectDemand{subjectCode='', totalDemand=-1854}", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("DetailedSubjectDemand{subjectCode='", "DetailedSubjectDemand{subjectCode='", (-1854));
      int int0 = subjectDemand0.compareTo(subjectDemand0);
      assertEquals((-1854), subjectDemand0.getTotalDemand());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("DetailedSubjectDemand{subjectCode='", "DetailedSubjectDemand{subjectCode='", (-1854));
      subjectDemand0.getSubjectName();
      assertEquals((-1854), subjectDemand0.getTotalDemand());
  }
}
