/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:21:41 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.AcademicUnitKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AcademicUnitKey_ESTest extends AcademicUnitKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      academicUnitKey0.setCode("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.AcademicUnitKey");
      String string0 = academicUnitKey0.getCode();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.AcademicUnitKey", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      academicUnitKey0.setCode("");
      String string0 = academicUnitKey0.getCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      AcademicUnitKey academicUnitKey1 = new AcademicUnitKey("QIz");
      // Undeclared exception!
      try { 
        academicUnitKey0.equals(academicUnitKey1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      String string0 = academicUnitKey0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      boolean boolean0 = academicUnitKey0.equals("QIz");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      boolean boolean0 = academicUnitKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      boolean boolean0 = academicUnitKey0.equals(academicUnitKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AcademicUnitKey academicUnitKey0 = new AcademicUnitKey();
      academicUnitKey0.hashCode();
  }
}
