/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:31:03 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.dropout;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.dropout.DropoutReasonSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DropoutReasonSummary_ESTest extends DropoutReasonSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 925, (-3335), (-1349), 0, 925, 0, (-227), 925, (-3335), 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-227), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(925, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-5471), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(925, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1349), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-3335), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(925, dropoutReasonSummary0.getFailedAll());
      assertEquals((-3335), dropoutReasonSummary0.getReenterSameCourse());
      
      DropoutReasonSummary dropoutReasonSummary1 = new DropoutReasonSummary((-3335), (-1349), (-1349), (-3335), (-325), (-1), (-1), (-227), 1, 636, (-1));
      assertNotNull(dropoutReasonSummary1);
      assertEquals((-1349), dropoutReasonSummary1.getCancelledByDecree());
      assertEquals((-1349), dropoutReasonSummary1.getCancelledCourseChange());
      assertEquals((-325), dropoutReasonSummary1.getFailed3Times());
      assertEquals(636, dropoutReasonSummary1.getReenterSameCourse());
      assertEquals((-227), dropoutReasonSummary1.getMissedGraduation());
      assertEquals((-9286), dropoutReasonSummary1.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary1.getFailedAll());
      assertEquals((-1), dropoutReasonSummary1.getTransferred());
      assertEquals((-1), dropoutReasonSummary1.getLeftWithoutNotice());
      assertEquals((-3335), dropoutReasonSummary1.getCancelled());
      assertEquals(1, dropoutReasonSummary1.getReenterOtherCourse());
      assertEquals((-3335), dropoutReasonSummary1.getCancelledUponRequest());
      assertFalse(dropoutReasonSummary1.equals((Object)dropoutReasonSummary0));
      
      dropoutReasonSummary0.add(dropoutReasonSummary1);
      assertEquals((-14757), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary0.getTransferred());
      assertEquals((-4684), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-424), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-4684), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-325), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2699), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(926, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-454), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-3335), dropoutReasonSummary0.getCancelled());
      assertEquals(924, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1349), dropoutReasonSummary1.getCancelledByDecree());
      assertEquals((-1349), dropoutReasonSummary1.getCancelledCourseChange());
      assertEquals((-325), dropoutReasonSummary1.getFailed3Times());
      assertEquals(636, dropoutReasonSummary1.getReenterSameCourse());
      assertEquals((-227), dropoutReasonSummary1.getMissedGraduation());
      assertEquals((-9286), dropoutReasonSummary1.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary1.getFailedAll());
      assertEquals((-1), dropoutReasonSummary1.getTransferred());
      assertEquals((-1), dropoutReasonSummary1.getLeftWithoutNotice());
      assertEquals((-3335), dropoutReasonSummary1.getCancelled());
      assertEquals(1, dropoutReasonSummary1.getReenterOtherCourse());
      assertEquals((-3335), dropoutReasonSummary1.getCancelledUponRequest());
      assertFalse(dropoutReasonSummary0.equals((Object)dropoutReasonSummary1));
      assertFalse(dropoutReasonSummary1.equals((Object)dropoutReasonSummary0));
      assertNotSame(dropoutReasonSummary0, dropoutReasonSummary1);
      assertNotSame(dropoutReasonSummary1, dropoutReasonSummary0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1), (-2795), (-109), (-109), (-1), (-2795), (-109), (-109), 0, (-109), (-2795));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      
      int int0 = dropoutReasonSummary0.computeTotalDropouts();
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-8932), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-3035), (-3035), (-3035), (-3035), (-3035), 0, 0, (-3035), (-3035), 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-3035), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-3035), dropoutReasonSummary0.getCancelled());
      assertEquals((-3035), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-3035), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-21245), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-3035), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-3035), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-3035), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getTransferred();
      assertEquals((-3035), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-3035), dropoutReasonSummary0.getCancelled());
      assertEquals((-3035), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-3035), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-21245), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-3035), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-3035), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-3035), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-647), (-647), 1084, 0, 0, 1301, (-1049), (-647), (-1997), (-1705), 979);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1705), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-3328), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(1084, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-647), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-647), dropoutReasonSummary0.getCancelled());
      assertEquals((-1997), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(979, dropoutReasonSummary0.getTransferred());
      assertEquals(1301, dropoutReasonSummary0.getFailedAll());
      assertEquals((-647), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1049), dropoutReasonSummary0.getLeftWithoutNotice());
      
      int int0 = dropoutReasonSummary0.getTransferred();
      assertEquals((-1705), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-3328), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(1084, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-647), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-647), dropoutReasonSummary0.getCancelled());
      assertEquals((-1997), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(979, dropoutReasonSummary0.getTransferred());
      assertEquals(1301, dropoutReasonSummary0.getFailedAll());
      assertEquals((-647), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1049), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(979, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1441), (-1441), 993, (-103), 993, 0, 0, (-1), 0, 1572, (-1938));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1366), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1441), dropoutReasonSummary0.getCancelled());
      assertEquals((-1), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(993, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1441), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1938), dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1572, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(993, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-103), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getReenterSameCourse();
      assertEquals((-1366), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1441), dropoutReasonSummary0.getCancelled());
      assertEquals((-1), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(993, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1441), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1938), dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1572, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(993, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-103), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1572, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1596), (-1596), 1263, (-1596), 407, 2923, (-1596), 2923, 1263, 8, 2659);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(8, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1263, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(2923, dropoutReasonSummary0.getFailedAll());
      assertEquals(1263, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(407, dropoutReasonSummary0.getFailed3Times());
      assertEquals(5062, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1596), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1596), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(2923, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1596), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1596), dropoutReasonSummary0.getCancelled());
      assertEquals(2659, dropoutReasonSummary0.getTransferred());
      
      int int0 = dropoutReasonSummary0.getReenterOtherCourse();
      assertEquals(8, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1263, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(2923, dropoutReasonSummary0.getFailedAll());
      assertEquals(1263, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(407, dropoutReasonSummary0.getFailed3Times());
      assertEquals(5062, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1596), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1596), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(2923, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1596), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1596), dropoutReasonSummary0.getCancelled());
      assertEquals(2659, dropoutReasonSummary0.getTransferred());
      assertEquals(1263, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(441, 441, 3516, (-813), 3516, 0, 3516, 0, (-1), 441, 3516);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(441, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(3516, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3516, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(3516, dropoutReasonSummary0.getTransferred());
      assertEquals(441, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-813), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(3516, dropoutReasonSummary0.getFailed3Times());
      assertEquals(14573, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(441, dropoutReasonSummary0.getCancelled());
      
      int int0 = dropoutReasonSummary0.getReenterOtherCourse();
      assertEquals(441, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(3516, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3516, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(3516, dropoutReasonSummary0.getTransferred());
      assertEquals(441, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-813), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(3516, dropoutReasonSummary0.getFailed3Times());
      assertEquals(14573, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(441, dropoutReasonSummary0.getCancelled());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(441, 441, 3516, (-813), 3516, 0, 3516, 0, (-1), 441, 3516);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals((-813), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(3516, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(3516, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(14573, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(441, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(3516, dropoutReasonSummary0.getFailed3Times());
      assertEquals(3516, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(441, dropoutReasonSummary0.getCancelled());
      assertEquals(441, dropoutReasonSummary0.getReenterSameCourse());
      
      int int0 = dropoutReasonSummary0.getMissedGraduation();
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals((-813), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(3516, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(3516, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(14573, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(441, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(3516, dropoutReasonSummary0.getFailed3Times());
      assertEquals(3516, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(441, dropoutReasonSummary0.getCancelled());
      assertEquals(441, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(474, 0, 292, 469, 292, 474, 0, 35, 7, 469, 35);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(469, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(474, dropoutReasonSummary0.getCancelled());
      assertEquals(474, dropoutReasonSummary0.getFailedAll());
      assertEquals(35, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(2547, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(7, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(469, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(292, dropoutReasonSummary0.getFailed3Times());
      assertEquals(35, dropoutReasonSummary0.getTransferred());
      assertEquals(292, dropoutReasonSummary0.getCancelledCourseChange());
      
      int int0 = dropoutReasonSummary0.getMissedGraduation();
      assertEquals(469, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(474, dropoutReasonSummary0.getCancelled());
      assertEquals(474, dropoutReasonSummary0.getFailedAll());
      assertEquals(35, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(2547, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(7, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(469, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(292, dropoutReasonSummary0.getFailed3Times());
      assertEquals(35, dropoutReasonSummary0.getTransferred());
      assertEquals(292, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(1, 1, 0, 0, 1, 1, 0, (-1515), 257, (-1), 257);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-998), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(257, dropoutReasonSummary0.getTransferred());
      assertEquals((-1515), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(257, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(1, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getCancelled());
      
      int int0 = dropoutReasonSummary0.getLeftWithoutNotice();
      assertEquals((-998), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(257, dropoutReasonSummary0.getTransferred());
      assertEquals((-1515), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(257, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(1, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getCancelled());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1088), (-1900), (-1), (-1), (-70), 780, 3453, (-70), 3453, (-1), (-1522));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals(3453, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3033, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      
      dropoutReasonSummary0.setLeftWithoutNotice((-1682));
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2102), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1682), dropoutReasonSummary0.getLeftWithoutNotice());
      
      int int0 = dropoutReasonSummary0.getLeftWithoutNotice();
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2102), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1682), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1682), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(2322, 0, 0, (-1107), 2579, 0, 7, 0, 0, 2579, 1);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(7, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1107), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(6381, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(2579, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals(2579, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(2322, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      
      int int0 = dropoutReasonSummary0.getFailedAll();
      assertEquals(7, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1107), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(6381, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(2579, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals(2579, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(2322, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-176), (-2670), 6, (-176), 1816, (-1926), (-1926), (-1926), (-176), (-336), (-336));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-7826), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(6, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-336), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1926), dropoutReasonSummary0.getFailedAll());
      assertEquals((-176), dropoutReasonSummary0.getCancelled());
      assertEquals(1816, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2670), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-176), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1926), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-176), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1926), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-336), dropoutReasonSummary0.getTransferred());
      
      int int0 = dropoutReasonSummary0.getFailedAll();
      assertEquals((-7826), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(6, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-336), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1926), dropoutReasonSummary0.getFailedAll());
      assertEquals((-176), dropoutReasonSummary0.getCancelled());
      assertEquals(1816, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2670), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-176), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1926), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-176), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1926), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-336), dropoutReasonSummary0.getTransferred());
      assertEquals((-1926), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      
      int int0 = dropoutReasonSummary0.getFailed3Times();
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(1, 1, 0, 0, (-3299), 0, 0, 1, (-3299), (-3299), 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals((-9894), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(1, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-3299), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-3299), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getCancelled());
      assertEquals((-3299), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      
      int int0 = dropoutReasonSummary0.getFailed3Times();
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals((-9894), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(1, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-3299), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-3299), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getCancelled());
      assertEquals((-3299), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(1, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-3299), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 0, 1077, 1077, 0, 1757, 1757, 0, (-841), 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(4827, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(1757, dropoutReasonSummary0.getFailedAll());
      assertEquals((-841), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(1077, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1077, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(1757, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      
      int int0 = dropoutReasonSummary0.getCancelledUponRequest();
      assertEquals(4827, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(1757, dropoutReasonSummary0.getFailedAll());
      assertEquals((-841), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(1077, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1077, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(1757, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1077, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(4292, (-2800), (-620), (-1656), 0, 4292, 2768, 0, (-2299), (-2800), (-1656));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1656), dropoutReasonSummary0.getTransferred());
      assertEquals(4292, dropoutReasonSummary0.getFailedAll());
      assertEquals((-479), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-2800), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-2800), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(4292, dropoutReasonSummary0.getCancelled());
      assertEquals((-620), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-2299), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(2768, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1656), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getCancelledUponRequest();
      assertEquals((-1656), dropoutReasonSummary0.getTransferred());
      assertEquals(4292, dropoutReasonSummary0.getFailedAll());
      assertEquals((-479), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-2800), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-2800), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(4292, dropoutReasonSummary0.getCancelled());
      assertEquals((-620), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-2299), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(2768, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1656), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1656), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-334), (-334), 1, 0, (-334), 1, 1, (-334), 3, 1, 1);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(1, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-334), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals((-1328), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-334), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-334), dropoutReasonSummary0.getCancelled());
      assertEquals((-334), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(1, dropoutReasonSummary0.getLeftWithoutNotice());
      
      dropoutReasonSummary0.setCancelledCourseChange(0);
      assertEquals(1, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-334), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(3, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals((-334), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1329), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-334), dropoutReasonSummary0.getCancelled());
      assertEquals((-334), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(1, dropoutReasonSummary0.getLeftWithoutNotice());
      
      int int0 = dropoutReasonSummary0.getCancelledCourseChange();
      assertEquals(1, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-334), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(3, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals((-334), dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1329), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-334), dropoutReasonSummary0.getCancelled());
      assertEquals((-334), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(1, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-176), (-2670), 6, (-176), 1816, (-1926), (-1926), (-1926), (-176), (-336), (-336));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1926), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-176), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-176), dropoutReasonSummary0.getCancelled());
      assertEquals((-2670), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1926), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-336), dropoutReasonSummary0.getTransferred());
      assertEquals((-336), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-176), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1816, dropoutReasonSummary0.getFailed3Times());
      assertEquals(6, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-7826), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1926), dropoutReasonSummary0.getFailedAll());
      
      int int0 = dropoutReasonSummary0.getCancelledCourseChange();
      assertEquals((-1926), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-176), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-176), dropoutReasonSummary0.getCancelled());
      assertEquals((-2670), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1926), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-336), dropoutReasonSummary0.getTransferred());
      assertEquals((-336), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-176), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1816, dropoutReasonSummary0.getFailed3Times());
      assertEquals(6, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-7826), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1926), dropoutReasonSummary0.getFailedAll());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1127), (-1127), 0, (-1), 1526, (-1127), (-1127), (-532), 1098, 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2417), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals((-1127), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      
      dropoutReasonSummary0.setCancelledByDecree(0);
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals((-1290), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      
      int int0 = dropoutReasonSummary0.getCancelledByDecree();
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals((-1290), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      
      int int0 = dropoutReasonSummary0.getCancelledByDecree();
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(2892, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      
      int int0 = dropoutReasonSummary0.getCancelled();
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(4, 0, 0, 4, 0, 4, (-1536), 0, (-1536), 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1536), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(4, dropoutReasonSummary0.getCancelled());
      assertEquals((-1536), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(4, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(4, dropoutReasonSummary0.getFailedAll());
      assertEquals((-3060), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      
      int int0 = dropoutReasonSummary0.getCancelled();
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1536), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(4, dropoutReasonSummary0.getCancelled());
      assertEquals((-1536), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(4, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(4, dropoutReasonSummary0.getFailedAll());
      assertEquals((-3060), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.computeTotalDropouts();
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-334), (-334), 1, 0, (-334), 1, 1, (-334), 3, 1, 1);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(1, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-334), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-334), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1328), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-334), dropoutReasonSummary0.getCancelled());
      assertEquals(1, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-334), dropoutReasonSummary0.getFailed3Times());
      assertEquals(3, dropoutReasonSummary0.getReenterOtherCourse());
      
      int int0 = dropoutReasonSummary0.computeTotalDropouts();
      assertEquals(1, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(1, dropoutReasonSummary0.getTransferred());
      assertEquals(1, dropoutReasonSummary0.getFailedAll());
      assertEquals((-334), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-334), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1328), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-334), dropoutReasonSummary0.getCancelled());
      assertEquals(1, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-334), dropoutReasonSummary0.getFailed3Times());
      assertEquals(3, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1328), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 0, 0, 0, 0, (-1314), (-1314), 0, (-2754), (-1314), (-2754));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-2754), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1314), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1314), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-9450), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1314), dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-2754), dropoutReasonSummary0.getTransferred());
      
      // Undeclared exception!
      try { 
        dropoutReasonSummary0.add((DropoutReasonSummary) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.dropout.DropoutReasonSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = null;
      try {
        dropoutReasonSummary0 = new DropoutReasonSummary((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.dropout.DropoutReasonSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[7];
      DropoutReasonSummary dropoutReasonSummary0 = null;
      try {
        dropoutReasonSummary0 = new DropoutReasonSummary(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.dropout.DropoutReasonSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 0, 0, 0, 117, 938, 117, 0, 0, 0, 811);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(117, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(811, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(117, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(938, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1983, dropoutReasonSummary0.computeTotalDropouts());
      
      int int0 = dropoutReasonSummary0.getCancelledUponRequest();
      assertEquals(117, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(811, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(117, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(938, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1983, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1), 0, 896, 0, 0, 3528, 0, 0, 0, 781, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(781, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(5204, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(3528, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals(896, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      
      int int0 = dropoutReasonSummary0.getCancelled();
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(781, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(5204, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(3528, dropoutReasonSummary0.getFailedAll());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals(896, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1088), (-1900), (-1), (-1), (-70), 780, 3453, (-70), 3453, (-1), (-1522));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(3453, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3033, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getLeftWithoutNotice();
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(3453, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3033, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(3453, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1127), (-1127), 0, (-1), 1526, (-1127), (-1127), (-532), 1098, 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals((-2417), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1127), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getCancelledByDecree();
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals((-2417), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1127), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1127), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1127), (-1127), 0, (-1), 1526, (-1127), (-1127), (-532), 1098, 0, 0);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals((-2417), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1127), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      
      int int0 = dropoutReasonSummary0.getFailed3Times();
      assertEquals((-1127), dropoutReasonSummary0.getFailedAll());
      assertEquals((-2417), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1127), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-1127), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1127), dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals((-532), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1526, dropoutReasonSummary0.getFailed3Times());
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(1098, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(1526, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-176), (-2670), 6, (-176), 1816, (-1926), (-1926), (-1926), (-176), (-336), (-336));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-336), dropoutReasonSummary0.getTransferred());
      assertEquals((-336), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(6, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1926), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1926), dropoutReasonSummary0.getFailedAll());
      assertEquals((-176), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1926), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1816, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-176), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-176), dropoutReasonSummary0.getCancelled());
      assertEquals((-7826), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-2670), dropoutReasonSummary0.getCancelledByDecree());
      
      int int0 = dropoutReasonSummary0.getTransferred();
      assertEquals((-336), dropoutReasonSummary0.getTransferred());
      assertEquals((-336), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(6, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1926), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1926), dropoutReasonSummary0.getFailedAll());
      assertEquals((-176), dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1926), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1816, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-176), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-176), dropoutReasonSummary0.getCancelled());
      assertEquals((-7826), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-2670), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-336), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1088), (-1900), (-1), (-1), (-70), 780, 3453, (-70), 3453, (-1), (-1522));
      assertNotNull(dropoutReasonSummary0);
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals(3033, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(3453, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getFailedAll();
      assertEquals(3453, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-1088), dropoutReasonSummary0.getCancelled());
      assertEquals((-70), dropoutReasonSummary0.getFailed3Times());
      assertEquals(3033, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-1), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1522), dropoutReasonSummary0.getTransferred());
      assertEquals((-1), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-1900), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(3453, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(780, dropoutReasonSummary0.getFailedAll());
      assertEquals((-70), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-1), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(780, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1), (-2795), (-109), (-109), (-1), (-2795), (-109), (-109), 0, (-109), (-2795));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      
      int int0 = dropoutReasonSummary0.getReenterOtherCourse();
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1), (-2795), (-109), (-109), (-1), (-2795), (-109), (-109), 0, (-109), (-2795));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      
      int int0 = dropoutReasonSummary0.getCancelledCourseChange();
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-1), (-2795), (-109), (-109), (-1), (-2795), (-109), (-109), 0, (-109), (-2795));
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      
      int int0 = dropoutReasonSummary0.getMissedGraduation();
      assertEquals((-2795), dropoutReasonSummary0.getCancelledByDecree());
      assertEquals((-109), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals((-109), dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals((-8932), dropoutReasonSummary0.computeTotalDropouts());
      assertEquals((-109), dropoutReasonSummary0.getReenterSameCourse());
      assertEquals((-2795), dropoutReasonSummary0.getTransferred());
      assertEquals((-2795), dropoutReasonSummary0.getFailedAll());
      assertEquals((-1), dropoutReasonSummary0.getFailed3Times());
      assertEquals((-1), dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-109), dropoutReasonSummary0.getMissedGraduation());
      assertEquals((-109), dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals((-109), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      
      dropoutReasonSummary0.setReenterOtherCourse(0);
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      
      int int0 = dropoutReasonSummary0.computeTotalDropouts();
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1029, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[12];
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(intArray0);
      assertEquals(12, intArray0.length);
      assertNotNull(dropoutReasonSummary0);
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      
      dropoutReasonSummary0.setCancelled(3760);
      assertEquals(12, intArray0.length);
      assertEquals(0, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      assertEquals(0, dropoutReasonSummary0.getMissedGraduation());
      assertEquals(0, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(3760, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(3760, dropoutReasonSummary0.getCancelled());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(0, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertNotNull(dropoutReasonSummary0);
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1029, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      assertEquals(0, dropoutReasonSummary0.getFailedAll());
      
      dropoutReasonSummary0.setFailedAll(2892);
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      assertEquals(2892, dropoutReasonSummary0.getFailedAll());
      assertEquals(3921, dropoutReasonSummary0.computeTotalDropouts());
      assertEquals(0, dropoutReasonSummary0.getLeftWithoutNotice());
      assertEquals(0, dropoutReasonSummary0.getReenterOtherCourse());
      assertEquals(0, dropoutReasonSummary0.getCancelled());
      assertEquals((-2976), dropoutReasonSummary0.getCancelledCourseChange());
      assertEquals(0, dropoutReasonSummary0.getCancelledUponRequest());
      assertEquals(2892, dropoutReasonSummary0.getCancelledByDecree());
      assertEquals(0, dropoutReasonSummary0.getFailed3Times());
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[12];
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(intArray0);
      dropoutReasonSummary0.setFailed3Times(3760);
      assertEquals(3760, dropoutReasonSummary0.getFailed3Times());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertEquals(1197, dropoutReasonSummary0.getReenterSameCourse());
      
      dropoutReasonSummary0.setReenterSameCourse(0);
      int int0 = dropoutReasonSummary0.getReenterSameCourse();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      dropoutReasonSummary0.setCancelledUponRequest(781);
      assertEquals(781, dropoutReasonSummary0.getCancelledUponRequest());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertEquals(2892, dropoutReasonSummary0.getTransferred());
      
      dropoutReasonSummary0.setTransferred((-2976));
      assertEquals(0, dropoutReasonSummary0.getCancelled());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary(0, 2892, (-2976), 0, 0, 0, 0, (-2976), 0, 1197, 2892);
      assertEquals((-2976), dropoutReasonSummary0.getMissedGraduation());
      
      dropoutReasonSummary0.setMissedGraduation(0);
      assertEquals(4005, dropoutReasonSummary0.computeTotalDropouts());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DropoutReasonSummary dropoutReasonSummary0 = new DropoutReasonSummary((-647), (-647), 1084, 0, 0, 1301, (-1049), (-647), (-1997), (-1705), 979);
      int int0 = dropoutReasonSummary0.getReenterSameCourse();
      assertEquals((-1705), int0);
      assertEquals((-3328), dropoutReasonSummary0.computeTotalDropouts());
  }
}
