/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:43:06 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTerm;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnrollmentsMetricsPerTermSummary_ESTest extends EnrollmentsMetricsPerTermSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("WQkY&eZsSXXp", "Gp@", "//(-yLZV!ww9q88r", (String) null, (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectName();
      assertEquals("//(-yLZV!ww9q88r", enrollmentsMetricsPerTermSummary0.getSubjectCode());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "br.edu.ufcg.computacao.eureca.backend.core.models.Range", "", "", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectName();
      assertEquals("", enrollmentsMetricsPerTermSummary0.getSubjectCode());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary((String) null, (String) null, (String) null, (String) null, (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "br.edu.ufcg.computacao.eureca.backend.core.models.Range", "", "", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectCode();
      assertEquals("", enrollmentsMetricsPerTermSummary0.getSubjectName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("~gT", "~gT", "~gT", "&", (Collection<EnrollmentsMetricsPerTerm>) null);
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary1 = new EnrollmentsMetricsPerTermSummary("~gT", "~gT", "", "~gT", (Collection<EnrollmentsMetricsPerTerm>) null);
      int int0 = enrollmentsMetricsPerTermSummary0.compareTo(enrollmentsMetricsPerTermSummary1);
      assertEquals(4, int0);
      assertEquals("&", enrollmentsMetricsPerTermSummary0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("NqcqU`;[nL -", "NqcqU`;[nL -", "EnrollmentsMetricsPerTerm{term='", "EnrollmentsMetricsPerTerm{term='", (Collection<EnrollmentsMetricsPerTerm>) null);
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary1 = new EnrollmentsMetricsPerTermSummary("uRyJP92$=eCo", "EnrollmentsMetricsPerTerm{term='", "NqcqU`;[nL -", "", (Collection<EnrollmentsMetricsPerTerm>) null);
      int int0 = enrollmentsMetricsPerTermSummary0.compareTo(enrollmentsMetricsPerTermSummary1);
      assertEquals((-9), int0);
      assertEquals("", enrollmentsMetricsPerTermSummary1.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "", "", "P].c+}tm&)<oHx+b", (Collection<EnrollmentsMetricsPerTerm>) null);
      // Undeclared exception!
      try { 
        enrollmentsMetricsPerTermSummary0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", (String) null, "", "", (Collection<EnrollmentsMetricsPerTerm>) null);
      // Undeclared exception!
      try { 
        enrollmentsMetricsPerTermSummary0.compareTo(", enrollmentsCount=");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      int int0 = enrollmentsMetricsPerTermSummary0.compareTo(enrollmentsMetricsPerTermSummary0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      Collection<EnrollmentsMetricsPerTerm> collection0 = enrollmentsMetricsPerTermSummary0.getTerms();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setSubjectName("lKqVy/9p2?PGZ[}P5");
      assertEquals("lKqVy/9p2?PGZ[}P5", enrollmentsMetricsPerTermSummary0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectName();
      assertEquals("lKqVy/9p2?PGZ[}P5", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectCode();
      assertEquals("lKqVy/9p2?PGZ[}P5", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.toString();
      assertEquals("EnrollmentsMetricsPerTermSummary{subjectCode='lKqVy/9p2?PGZ[}P5', subjectName='lKqVy/9p2?PGZ[}P5', terms=null}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setTerms((Collection<EnrollmentsMetricsPerTerm>) null);
      assertEquals("lKqVy/9p2?PGZ[}P5", enrollmentsMetricsPerTermSummary0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", "lKqVy/9p2?PGZ[}P5", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setSubjectCode("lKqVy/9p2?PGZ[}P5");
      assertEquals("lKqVy/9p2?PGZ[}P5", enrollmentsMetricsPerTermSummary0.getFrom());
  }
}
