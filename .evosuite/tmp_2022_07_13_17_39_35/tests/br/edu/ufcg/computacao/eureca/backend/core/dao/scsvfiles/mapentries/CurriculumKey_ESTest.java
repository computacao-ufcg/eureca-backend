/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:21:06 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CurriculumKey_ESTest extends CurriculumKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("", (String) null);
      curriculumKey0.setCurriculumCode(".@@!dC;<2 0`'Md");
      String string0 = curriculumKey0.getCurriculumCode();
      assertEquals(".@@!dC;<2 0`'Md", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.setCurriculumCode("");
      String string0 = curriculumKey0.getCurriculumCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.setCourseCode("null:null");
      String string0 = curriculumKey0.getCourseCode();
      assertEquals("null:null", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("", (String) null);
      String string0 = curriculumKey0.getCourseCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      String string0 = curriculumKey0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      String string0 = curriculumKey0.getCourseCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.setCurriculumCode("v'JX>Z3tqH[{\"noU");
      curriculumKey0.setCourseCode("null:v'JX>Z3tqH[{\"noU");
      CurriculumKey curriculumKey1 = new CurriculumKey("null:v'JX>Z3tqH[{\"noU", "v'JX>Z3tqH[{\"noU");
      boolean boolean0 = curriculumKey0.equals(curriculumKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.setCurriculumCode("(mE]_$_r{ACIT>R2IH");
      curriculumKey0.setCourseCode("null:null");
      CurriculumKey curriculumKey1 = new CurriculumKey("null:null", "'rIl;1xW2~3auUva|");
      boolean boolean0 = curriculumKey0.equals(curriculumKey1);
      assertEquals("null:null", curriculumKey1.getCourseCode());
      assertFalse(boolean0);
      assertEquals("'rIl;1xW2~3auUva|", curriculumKey1.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.setCourseCode("null:v'JX>Z3tqH[{\"noU");
      CurriculumKey curriculumKey1 = new CurriculumKey("null:v'JX>Z3tqH[{\"noU", "v'JX>Z3tqH[{\"noU");
      // Undeclared exception!
      try { 
        curriculumKey0.equals(curriculumKey1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("t][&R1c0;:HW;", "t][&R1c0;:HW;");
      CurriculumKey curriculumKey1 = new CurriculumKey("9", "t][&R1c0;:HW;");
      boolean boolean0 = curriculumKey0.equals(curriculumKey1);
      assertFalse(boolean0);
      assertEquals("t][&R1c0;:HW;", curriculumKey1.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      boolean boolean0 = curriculumKey0.equals("cjj TTE:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      boolean boolean0 = curriculumKey0.equals(curriculumKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      boolean boolean0 = curriculumKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      String string0 = curriculumKey0.toString();
      assertEquals("null:null", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.hashCode();
  }
}
