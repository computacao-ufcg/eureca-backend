/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:28:26 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.subject;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.subject.SubjectMetricsPerTermSummary;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.subject.SubjectsStatisticsResponse;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectsStatisticsResponse_ESTest extends SubjectsStatisticsResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, (String) null, (String) null);
      String string0 = subjectsStatisticsResponse0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "3B9!)Ij", "3B9!)Ij");
      String string0 = subjectsStatisticsResponse0.getCurriculumCode();
      assertEquals("3B9!)Ij", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "Siv+<}.cO", "br.edu.ufcg.computacao.eureca.backend.core.models.Range");
      assertEquals("Siv+<}.cO", subjectsStatisticsResponse0.getCourseCode());
      
      subjectsStatisticsResponse0.setCourseCode((String) null);
      subjectsStatisticsResponse0.getCourseCode();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Range", subjectsStatisticsResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "", "");
      String string0 = subjectsStatisticsResponse0.getCourseCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "", "");
      Collection<SubjectMetricsPerTermSummary> collection0 = subjectsStatisticsResponse0.getSubjects();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "Siv+<}.cO", "br.edu.ufcg.computacao.eureca.backend.core.models.Range");
      String string0 = subjectsStatisticsResponse0.getCourseCode();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Range", subjectsStatisticsResponse0.getCurriculumCode());
      assertEquals("Siv+<}.cO", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "", "");
      subjectsStatisticsResponse0.setCurriculumCode("");
      assertEquals("", subjectsStatisticsResponse0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "", "");
      String string0 = subjectsStatisticsResponse0.getCurriculumCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SubjectsStatisticsResponse subjectsStatisticsResponse0 = new SubjectsStatisticsResponse((Collection<SubjectMetricsPerTermSummary>) null, "", "");
      subjectsStatisticsResponse0.setSubjects((Collection<SubjectMetricsPerTermSummary>) null);
      assertEquals("", subjectsStatisticsResponse0.getCurriculumCode());
  }
}
