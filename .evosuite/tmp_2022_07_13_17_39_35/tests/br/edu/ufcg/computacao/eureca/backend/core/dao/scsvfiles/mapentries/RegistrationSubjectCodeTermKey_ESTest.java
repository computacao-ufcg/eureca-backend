/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:18:35 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegistrationSubjectCodeTermKey_ESTest extends RegistrationSubjectCodeTermKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("", "", "cUm5Q");
      registrationSubjectCodeTermKey0.hashCode();
      assertEquals("cUm5Q", registrationSubjectCodeTermKey0.getTerm());
      assertEquals("", registrationSubjectCodeTermKey0.getRegistration());
      assertEquals("", registrationSubjectCodeTermKey0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      String string0 = registrationSubjectCodeTermKey0.toString();
      assertEquals("null:null:null", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      Object object0 = new Object();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("", "", "cUm5Q");
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey("", "(_eMs9", "(_eMs9");
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey1);
      assertEquals("cUm5Q", registrationSubjectCodeTermKey0.getTerm());
      assertEquals("", registrationSubjectCodeTermKey1.getRegistration());
      assertEquals("", registrationSubjectCodeTermKey0.getSubjectCode());
      assertFalse(boolean0);
      assertEquals("(_eMs9", registrationSubjectCodeTermKey1.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey");
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey1.equals(registrationSubjectCodeTermKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey");
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey1.setRegistration("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey");
      registrationSubjectCodeTermKey1.setSubjectCode("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey");
      registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey1.equals(registrationSubjectCodeTermKey0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("", "", "cUm5Q");
      registrationSubjectCodeTermKey0.getRegistration();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("cq3@~a", "cq3@~a", "");
      registrationSubjectCodeTermKey0.getTerm();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("", "", "");
      registrationSubjectCodeTermKey0.getSubjectCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("H4Q?LnD", (String) null, "");
      registrationSubjectCodeTermKey0.getRegistration();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.getRegistration();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("Y<V[9>>,~62 (|pr/@", "Y<V[9>>,~62 (|pr/@", "j,=L~a@.lZR/");
      registrationSubjectCodeTermKey0.getSubjectCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.getSubjectCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.setTerm(" KMM5zUp]5W&$*lCy=");
      registrationSubjectCodeTermKey0.getTerm();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.getTerm();
  }
}
