/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 20:53:57 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.util.factory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.constants.GlossaryFields;
import br.edu.ufcg.computacao.eureca.backend.core.models.GlossaryType;
import br.edu.ufcg.computacao.eureca.backend.core.util.factory.GlossaryFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GlossaryFactory_ESTest extends GlossaryFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.TEACHER;
      // Undeclared exception!
      try { 
        GlossaryFactory.createGlossary((String) null, glossaryType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.util.factory.GlossaryFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.ALUMNI;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("PORTUGUESE", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.RETENTION;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.TEACHER;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("{-", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.ENROLLMENT;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("F,M_.", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.SUBJECT;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("PORTUGUESE", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.STUDENT;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("PORTUGUESE", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.ALUMNI;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("{-", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.RETENTION;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("PORTUGUESE", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.TEACHER;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("PORTUGUESE", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.ENROLLMENT;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("PORTUGUESE", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.SUBJECT;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("{-", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GlossaryType glossaryType0 = GlossaryType.STUDENT;
      GlossaryFields glossaryFields0 = GlossaryFactory.createGlossary("{-", glossaryType0);
      assertNotNull(glossaryFields0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GlossaryFactory glossaryFactory0 = new GlossaryFactory();
  }
}
