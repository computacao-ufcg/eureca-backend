/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 20:57:36 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey;
import br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScheduleKey_ESTest extends ScheduleKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      String string0 = scheduleKey0.getTerm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      scheduleKey0.setTerm("");
      String string0 = scheduleKey0.getTerm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      String string0 = scheduleKey0.getSubjectCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("", "kt%b:Nb#%M5g", "kt%b:Nb#%M5g", "*-j", "kt%b:Nb#%M5g");
      String string0 = scheduleKey0.getSubjectCode();
      assertEquals("*-j", scheduleKey0.getClassCode());
      assertEquals("kt%b:Nb#%M5g", scheduleKey0.getCurriculumCode());
      assertEquals("kt%b:Nb#%M5g", string0);
      assertEquals("", scheduleKey0.getCourseCode());
      assertEquals("kt%b:Nb#%M5g", scheduleKey0.getTerm());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("obSSgJ[(6AOf>=", "obSSgJ[(6AOf>=", "obSSgJ[(6AOf>=", "obSSgJ[(6AOf>=", "obSSgJ[(6AOf>=");
      String string0 = scheduleKey0.getCurriculumCode();
      assertEquals("obSSgJ[(6AOf>=", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("", "", "", "", "<(J?}\"PCkKWDO(");
      String string0 = scheduleKey0.getCurriculumCode();
      assertEquals("<(J?}\"PCkKWDO(", scheduleKey0.getTerm());
      assertEquals("", scheduleKey0.getSubjectCode());
      assertEquals("", scheduleKey0.getCourseCode());
      assertEquals("", scheduleKey0.getClassCode());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "", "", "&7H(dr'XLa)ZE'!l)I2");
      String string0 = scheduleKey0.getCourseCode();
      assertEquals("", scheduleKey0.getClassCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", string0);
      assertEquals("&7H(dr'XLa)ZE'!l)I2", scheduleKey0.getTerm());
      assertEquals("", scheduleKey0.getSubjectCode());
      assertEquals("", scheduleKey0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      scheduleKey0.setCourseCode("");
      String string0 = scheduleKey0.getCourseCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("", "kt%b:Nb#%M5g", "kt%b:Nb#%M5g", "*-j", "kt%b:Nb#%M5g");
      String string0 = scheduleKey0.getClassCode();
      assertEquals("", scheduleKey0.getCourseCode());
      assertEquals("kt%b:Nb#%M5g", scheduleKey0.getCurriculumCode());
      assertEquals("kt%b:Nb#%M5g", scheduleKey0.getTerm());
      assertEquals("kt%b:Nb#%M5g", scheduleKey0.getSubjectCode());
      assertEquals("*-j", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      scheduleKey0.setClassCode("");
      String string0 = scheduleKey0.getClassCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      ScheduleKey scheduleKey1 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey", "", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey", "", "");
      scheduleKey0.compareTo(scheduleKey1);
      assertEquals("", scheduleKey1.getClassCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey", scheduleKey1.getCourseCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey", scheduleKey1.getSubjectCode());
      assertEquals("", scheduleKey1.getCurriculumCode());
      assertEquals("", scheduleKey1.getTerm());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      ScheduleKey scheduleKey1 = new ScheduleKey("", "", "w06x2", (String) null, (String) null);
      int int0 = scheduleKey0.compareTo(scheduleKey1);
      assertEquals("", scheduleKey1.getCurriculumCode());
      assertEquals((-9), int0);
      assertEquals("", scheduleKey1.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      // Undeclared exception!
      try { 
        scheduleKey0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("", "", "", "", "");
      // Undeclared exception!
      try { 
        scheduleKey0.compareTo("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("", "", "", "", "");
      String string0 = scheduleKey0.getSubjectCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      String string0 = scheduleKey0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      ScheduleKey scheduleKey1 = new ScheduleKey();
      assertTrue(scheduleKey1.equals((Object)scheduleKey0));
      
      scheduleKey1.setClassCode(")j<Jvj(h&_lu i~+");
      boolean boolean0 = scheduleKey0.equals(scheduleKey1);
      assertFalse(scheduleKey1.equals((Object)scheduleKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      ScheduleKey scheduleKey1 = new ScheduleKey();
      boolean boolean0 = scheduleKey0.equals(scheduleKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      ScheduleKey scheduleKey1 = new ScheduleKey();
      assertTrue(scheduleKey1.equals((Object)scheduleKey0));
      
      scheduleKey1.setCurriculumCode("");
      boolean boolean0 = scheduleKey0.equals(scheduleKey1);
      assertFalse(scheduleKey1.equals((Object)scheduleKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      ScheduleKey scheduleKey1 = new ScheduleKey();
      scheduleKey1.setCourseCode("br.edu.ufcg.comtutacao.ereca.backend.core.dao.scyvfiles.mapentries.ScheduleKey");
      boolean boolean0 = scheduleKey0.equals(scheduleKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      boolean boolean0 = scheduleKey0.equals("P9-UqwB\"?6G]\f?");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      boolean boolean0 = scheduleKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      boolean boolean0 = scheduleKey0.equals(scheduleKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "", "", "&7H(dr'XLa)ZE'!l)I2");
      ScheduleKey scheduleKey1 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "Pa?Mx-~z1{w", "", "");
      boolean boolean0 = scheduleKey0.equals(scheduleKey1);
      assertFalse(boolean0);
      assertEquals("", scheduleKey0.getCurriculumCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", scheduleKey1.getCourseCode());
      assertEquals("", scheduleKey1.getClassCode());
      assertEquals("&7H(dr'XLa)ZE'!l)I2", scheduleKey0.getTerm());
      assertEquals("", scheduleKey0.getClassCode());
      assertEquals("Pa?Mx-~z1{w", scheduleKey1.getSubjectCode());
      assertEquals("", scheduleKey1.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "", "", "&7H(dr'XLa)ZE'!l)I2");
      scheduleKey0.hashCode();
      assertEquals("", scheduleKey0.getClassCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", scheduleKey0.getCourseCode());
      assertEquals("", scheduleKey0.getSubjectCode());
      assertEquals("", scheduleKey0.getCurriculumCode());
      assertEquals("&7H(dr'XLa)ZE'!l)I2", scheduleKey0.getTerm());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "", "", "&7H(dr'XLa)ZE'!l)I2");
      String string0 = scheduleKey0.getTerm();
      assertEquals("", scheduleKey0.getCurriculumCode());
      assertEquals("", scheduleKey0.getSubjectCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", scheduleKey0.getCourseCode());
      assertEquals("", scheduleKey0.getClassCode());
      assertEquals("&7H(dr'XLa)ZE'!l)I2", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "", "", "&7H(dr'XLa)ZE'!l)I2");
      assertEquals("", scheduleKey0.getSubjectCode());
      
      scheduleKey0.setSubjectCode("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey");
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", scheduleKey0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      int int0 = scheduleKey0.compareTo(scheduleKey0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      String string0 = scheduleKey0.getCourseCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      SubjectScheduleKey subjectScheduleKey0 = scheduleKey0.createSubjectScheduleKey();
      assertNull(subjectScheduleKey0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ScheduleKey scheduleKey0 = new ScheduleKey();
      String string0 = scheduleKey0.getClassCode();
      assertNull(string0);
  }
}
