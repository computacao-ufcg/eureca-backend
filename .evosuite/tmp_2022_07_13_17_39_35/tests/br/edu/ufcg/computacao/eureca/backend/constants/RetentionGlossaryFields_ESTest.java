/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:43:59 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.constants;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import br.edu.ufcg.computacao.eureca.backend.constants.Field;
import br.edu.ufcg.computacao.eureca.backend.constants.RetentionGlossaryFields;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RetentionGlossaryFields_ESTest extends RetentionGlossaryFields_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field1, field0, field0, field1, field1, field1, field0, field0, field0, field1, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = retentionGlossaryFields0.getAverageCost();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertNotSame(field2, field0);
      assertSame(field2, field1);
      assertFalse(field2.equals((Object)field0));
      
      retentionGlossaryFields0.setAverageGpa(field2);
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotSame(field2, field0);
      assertSame(field2, field1);
      assertFalse(field2.equals((Object)field0));
      
      Field field3 = retentionGlossaryFields0.getTransferCount();
      assertNull(field3.getName());
      assertNull(field3.getDescription());
      assertNotNull(field3);
      assertSame(field3, field0);
      assertNotSame(field3, field2);
      assertNotSame(field3, field1);
      assertFalse(field3.equals((Object)field2));
      assertFalse(field3.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.rejoinCount = field1;
      assertNull(retentionGlossaryFields0.rejoinCount.getDescription());
      assertNull(retentionGlossaryFields0.rejoinCount.getName());
      
      retentionGlossaryFields0.setSuccessRate(retentionGlossaryFields0.rejoinCount);
      Field field2 = retentionGlossaryFields0.getTransferCount();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field1, field1, field0, field0, field1, field0, field0, field0, field1, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field2).toString();
      retentionGlossaryFields0.setDropoutCount(field2);
      Field field3 = retentionGlossaryFields0.getDropoutCount();
      assertNull(field3.getName());
      assertNull(field3.getDescription());
      assertNotNull(field3);
      assertNotSame(field3, field1);
      assertSame(field3, field2);
      assertNotSame(field3, field0);
      assertFalse(field3.equals((Object)field1));
      assertFalse(field3.equals((Object)field0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      retentionGlossaryFields0.setCanceledCount(field1);
      Field field2 = retentionGlossaryFields0.getCanceledCount();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertSame(field2, field1);
      assertNotSame(field2, field0);
      assertFalse(field2.equals((Object)field0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field1, field0, field1, field1, field0, field0, field1, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.rejoinCount = field2;
      assertNull(retentionGlossaryFields0.rejoinCount.getName());
      assertNull(retentionGlossaryFields0.rejoinCount.getDescription());
      
      retentionGlossaryFields0.setRejoinCount(retentionGlossaryFields0.rejoinCount);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field2).toString();
      Field field3 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field1, field1, field0, field2, field2, field1, field1, field0, field2, field3, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field4 = retentionGlossaryFields0.getPredictedGraduation();
      assertNull(field4.getDescription());
      assertNull(field4.getName());
      assertNotNull(field4);
      assertSame(field4, field2);
      assertNotSame(field4, field0);
      assertNotSame(field4, field3);
      assertNotSame(field4, field1);
      assertFalse(field4.equals((Object)field0));
      assertFalse(field4.equals((Object)field3));
      assertFalse(field4.equals((Object)field1));
      
      retentionGlossaryFields0.setRejoinCount(field4);
      assertNull(field4.getDescription());
      assertNull(field4.getName());
      assertSame(field4, field2);
      assertNotSame(field4, field0);
      assertNotSame(field4, field3);
      assertNotSame(field4, field1);
      assertFalse(field4.equals((Object)field0));
      assertFalse(field4.equals((Object)field3));
      assertFalse(field4.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field1, field1, field0, field0, field1, field0, field0, field0, field1, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.setDropoutCount(field2);
      Field field3 = retentionGlossaryFields0.getRejoinCount();
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertNotNull(field3);
      assertSame(field3, field0);
      assertNotSame(field3, field2);
      assertNotSame(field3, field1);
      assertFalse(field3.equals((Object)field2));
      assertFalse(field3.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field1, field0, field1, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = retentionGlossaryFields0.getRejoinCount();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertNotSame(field2, field0);
      assertSame(field2, field1);
      assertFalse(field2.equals((Object)field0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.dropoutCount = null;
      Field field2 = retentionGlossaryFields0.getAverageCost();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setAverageTime((Field) null);
      Field field2 = retentionGlossaryFields0.getAverageCost();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field1, field0, field0, field1, field1, field1, field0, field0, field1, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = retentionGlossaryFields0.getAverageCost();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertNotSame(field2, field0);
      assertSame(field2, field1);
      assertFalse(field2.equals((Object)field0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field1, field0, field1, field0, field2);
      assertNotNull(retentionGlossaryFields0);
      
      Field field3 = retentionGlossaryFields0.getAverageLoad();
      assertNull(field3.getName());
      assertNull(field3.getDescription());
      assertNotNull(field3);
      assertSame(field3, field0);
      assertNotSame(field3, field2);
      assertNotSame(field3, field1);
      assertFalse(field3.equals((Object)field2));
      assertFalse(field3.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field1, field1, field1, field1, field0, field0, field0, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = retentionGlossaryFields0.getAverageLoad();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, (Field) null, (Field) null, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = retentionGlossaryFields0.getAverageLoad();
      assertNull(field1.getDescription());
      assertNull(field1.getName());
      assertNotNull(field1);
      assertSame(field1, field0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field1, field0, field1, field1, field0, field0, field0, field1, field1, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
      
      retentionGlossaryFields0.setCanceledCount(field2);
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
      
      Field field3 = retentionGlossaryFields0.getAverageLoad();
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertNotNull(field3);
      assertNotSame(field3, field0);
      assertSame(field3, field1);
      assertNotSame(field3, field2);
      assertFalse(field3.equals((Object)field0));
      assertFalse(field3.equals((Object)field2));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field1, field0, field1, field1, field0, field0, field1, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = retentionGlossaryFields0.getAverageRisk();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field1, field0, field1, (Field) null, field0);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setAverageRisk((Field) null);
      Field field2 = retentionGlossaryFields0.getAverageRisk();
      assertNull(field2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field1, field1, field1, field0, field0, field0, field0, field1, field1, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.setStudentRetention(field2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field3 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field1, field1, field0, field2, field2, field1, field1, field0, field2, field3, field1);
      assertNotNull(retentionGlossaryFields0);
      
      Field field4 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field4).toString();
      retentionGlossaryFields0.setPredictedGraduation(field4);
      Field field5 = retentionGlossaryFields0.getPredictedGraduation();
      assertNull(field5.getDescription());
      assertNull(field5.getName());
      assertNotNull(field5);
      assertNotSame(field5, field1);
      assertNotSame(field5, field2);
      assertSame(field5, field4);
      assertNotSame(field5, field3);
      assertNotSame(field5, field0);
      assertFalse(field5.equals((Object)field1));
      assertFalse(field5.equals((Object)field2));
      assertFalse(field5.equals((Object)field3));
      assertFalse(field5.equals((Object)field0));
      
      retentionGlossaryFields0.setStudentRetention(field5);
      assertNull(field5.getDescription());
      assertNull(field5.getName());
      assertNotSame(field5, field1);
      assertNotSame(field5, field2);
      assertSame(field5, field4);
      assertNotSame(field5, field3);
      assertNotSame(field5, field0);
      assertFalse(field5.equals((Object)field1));
      assertFalse(field5.equals((Object)field2));
      assertFalse(field5.equals((Object)field3));
      assertFalse(field5.equals((Object)field0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.setAverageCost(field1);
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setAverageLoad((Field) null);
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setAverageGpa((Field) null);
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setSuccessRate((Field) null);
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setAverageTime((Field) null);
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertSame(field2, field0);
      assertNotSame(field2, field1);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, (Field) null, field0, field0, field0, (Field) null, field0, (Field) null, (Field) null);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field1.getName());
      assertNull(field1.getDescription());
      assertNotNull(field1);
      assertSame(field1, field0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.setAverageRisk(field1);
      Field field2 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field2.getDescription());
      assertNull(field2.getName());
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertFalse(field2.equals((Object)field1));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, (Field) null, (Field) null, (Field) null, field0, (Field) null, (Field) null, field0, (Field) null, (Field) null, (Field) null);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = retentionGlossaryFields0.getTransferCount();
      assertNull(field1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0);
      assertNotNull(retentionGlossaryFields0);
      
      Field field1 = retentionGlossaryFields0.getSuccessRate();
      assertNull(field1.getDescription());
      assertNull(field1.getName());
      assertNotNull(field1);
      assertSame(field1, field0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      assertNotNull(retentionGlossaryFields0);
      
      Field field0 = retentionGlossaryFields0.getStudentRetention();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      assertNotNull(retentionGlossaryFields0);
      
      Field field0 = retentionGlossaryFields0.getRejoinCount();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      assertNotNull(retentionGlossaryFields0);
      
      retentionGlossaryFields0.setAverageTime((Field) null);
      Field field2 = retentionGlossaryFields0.getAverageTime();
      assertNull(field2);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field1, field0, field1, field1, field0, field0, field0, field1, field1, field1);
      Field field2 = retentionGlossaryFields0.getAverageGpa();
      assertNotNull(field2);
      assertSame(field2, field0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      retentionGlossaryFields0.setSuccessRate((Field) null);
      Field field2 = retentionGlossaryFields0.getSuccessRate();
      assertNull(field2);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      Field field0 = retentionGlossaryFields0.getAverageLoad();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      Field field0 = retentionGlossaryFields0.getAverageCost();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      Field field0 = retentionGlossaryFields0.getCanceledCount();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, (Field) null, field0, field0, field0, (Field) null, field0, (Field) null, (Field) null);
      Field field1 = retentionGlossaryFields0.getDropoutCount();
      assertNull(field1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field1, field0, field0, field1, field1, (Field) null, (Field) null, field0, field1);
      Field field2 = retentionGlossaryFields0.getTransferCount();
      assertNotSame(field2, field0);
      assertNotNull(field2);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      retentionGlossaryFields0.setAverageGpa((Field) null);
      Field field2 = retentionGlossaryFields0.getAverageGpa();
      assertNull(field2);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      Field field0 = retentionGlossaryFields0.getPredictedGraduation();
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field1);
      Field field2 = retentionGlossaryFields0.getAverageTime();
      assertNull(field2.getDescription());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      RetentionGlossaryFields retentionGlossaryFields0 = new RetentionGlossaryFields(field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0, field0);
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      retentionGlossaryFields0.setTransferCount(field1);
  }
}
