/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:35:20 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.constants;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import br.edu.ufcg.computacao.eureca.backend.constants.AlumniGlossaryFields;
import br.edu.ufcg.computacao.eureca.backend.constants.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlumniGlossaryFields_ESTest extends AlumniGlossaryFields_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(field0).toString();
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields(field0, field0, field0, field0, field0, field0);
      assertNotNull(alumniGlossaryFields0);
      
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      alumniGlossaryFields0.employersInGovernment = field1;
      assertNull(alumniGlossaryFields0.employersInGovernment.getName());
      assertNull(alumniGlossaryFields0.employersInGovernment.getDescription());
      
      Field field2 = alumniGlossaryFields0.getEmployersInIndustry();
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertFalse(field2.equals((Object)field1));
      assertNotNull(field2);
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      
      Field field3 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field3.getName());
      assertNull(field3.getDescription());
      assertFalse(field3.equals((Object)field1));
      assertNotNull(field3);
      assertNotSame(field3, field1);
      assertSame(field3, field2);
      assertSame(field3, field0);
      
      alumniGlossaryFields0.setEmployersInIndustry(field2);
      assertNull(field2.getName());
      assertNull(field2.getDescription());
      assertFalse(field2.equals((Object)field1));
      assertNotSame(field2, field1);
      assertSame(field2, field0);
      assertSame(field2, field3);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      assertNotNull(alumniGlossaryFields0);
      
      alumniGlossaryFields0.alumniTracked = null;
      alumniGlossaryFields0.alumniTracked = null;
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.employersInIndustry = null;
      Field field0 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNull(field0);
      
      Field field1 = alumniGlossaryFields0.getEmployersInOngs();
      assertNull(field1);
      
      alumniGlossaryFields0.employersInOngs = null;
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      Field field2 = alumniGlossaryFields0.getEmployersInOngs();
      assertNull(field2);
      
      alumniGlossaryFields0.setConsolidatedEmployers((Field) null);
      alumniGlossaryFields0.setConsolidatedEmployers((Field) null);
      Field field3 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field3);
      
      alumniGlossaryFields0.setAlumniTracked((Field) null);
      alumniGlossaryFields0.setEmployersInIndustry((Field) null);
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.setAlumniTracked((Field) null);
      alumniGlossaryFields0.alumniTracked = null;
      Field field4 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field4);
      
      Field field5 = alumniGlossaryFields0.getEmployersInAcademy();
      assertNull(field5);
      
      Field field6 = alumniGlossaryFields0.getEmployersInOngs();
      assertNull(field6);
      
      alumniGlossaryFields0.consolidatedEmployers = null;
      Field field7 = alumniGlossaryFields0.getEmployersInIndustry();
      assertNull(field7);
      
      Field field8 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNull(field8);
      
      Field field9 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field9);
      
      alumniGlossaryFields0.setAlumniTracked((Field) null);
      alumniGlossaryFields0.setConsolidatedEmployers((Field) null);
      alumniGlossaryFields0.setEmployersInIndustry((Field) null);
      Field field10 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNull(field10);
      
      alumniGlossaryFields0.setAlumniTracked((Field) null);
      Field field11 = alumniGlossaryFields0.getEmployersInIndustry();
      assertNull(field11);
      
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      Field field12 = alumniGlossaryFields0.getEmployersInAcademy();
      assertNull(field12);
      
      Field field13 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field13);
      
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.setConsolidatedEmployers((Field) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields(field0, field0, field0, field0, field0, field0);
      assertNotNull(alumniGlossaryFields0);
      
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      alumniGlossaryFields0.employersInOngs = null;
      alumniGlossaryFields0.setEmployersInIndustry((Field) null);
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.setEmployersInAcademy((Field) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields(field0, field0, field0, field0, field0, field0);
      assertNotNull(alumniGlossaryFields0);
      
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      alumniGlossaryFields0.setEmployersInOngs(field1);
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(field2).toString();
      alumniGlossaryFields0.employersInGovernment = field2;
      assertNull(alumniGlossaryFields0.employersInGovernment.getDescription());
      assertNull(alumniGlossaryFields0.employersInGovernment.getName());
      
      Field field3 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertFalse(field3.equals((Object)field0));
      assertFalse(field3.equals((Object)field1));
      assertNotNull(field3);
      assertNotSame(field3, field0);
      assertSame(field3, field2);
      assertNotSame(field3, field1);
      
      alumniGlossaryFields0.consolidatedEmployers = field3;
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertNull(alumniGlossaryFields0.consolidatedEmployers.getName());
      assertNull(alumniGlossaryFields0.consolidatedEmployers.getDescription());
      
      alumniGlossaryFields0.setEmployersInGovernment(field3);
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertFalse(field3.equals((Object)field0));
      assertFalse(field3.equals((Object)field1));
      assertNotSame(field3, field0);
      assertSame(field3, field2);
      assertNotSame(field3, field1);
      
      Field field4 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field4.getName());
      assertNull(field4.getDescription());
      assertFalse(field4.equals((Object)field0));
      assertFalse(field4.equals((Object)field1));
      assertNotNull(field4);
      assertNotSame(field4, field0);
      assertSame(field4, field2);
      assertNotSame(field4, field1);
      assertSame(field4, field3);
      
      Field field5 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNull(field5.getName());
      assertNull(field5.getDescription());
      assertFalse(field5.equals((Object)field0));
      assertFalse(field5.equals((Object)field1));
      assertNotNull(field5);
      assertNotSame(field5, field0);
      assertNotSame(field5, field1);
      assertSame(field5, field2);
      assertSame(field5, field3);
      assertSame(field5, field4);
      
      alumniGlossaryFields0.setEmployersInIndustry(field3);
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertFalse(field3.equals((Object)field0));
      assertFalse(field3.equals((Object)field1));
      assertNotSame(field3, field0);
      assertSame(field3, field5);
      assertSame(field3, field4);
      assertSame(field3, field2);
      assertNotSame(field3, field1);
      
      alumniGlossaryFields0.setEmployersInOngs(field5);
      assertNull(field5.getName());
      assertNull(field5.getDescription());
      assertFalse(field5.equals((Object)field0));
      assertFalse(field5.equals((Object)field1));
      assertNotSame(field5, field0);
      assertNotSame(field5, field1);
      assertSame(field5, field2);
      assertSame(field5, field3);
      assertSame(field5, field4);
      
      alumniGlossaryFields0.setEmployersInOngs(field3);
      assertNull(field3.getDescription());
      assertNull(field3.getName());
      assertFalse(field3.equals((Object)field0));
      assertFalse(field3.equals((Object)field1));
      assertNotSame(field3, field0);
      assertSame(field3, field5);
      assertSame(field3, field4);
      assertSame(field3, field2);
      assertNotSame(field3, field1);
      
      alumniGlossaryFields0.setEmployersInIndustry(field4);
      assertNull(field4.getName());
      assertNull(field4.getDescription());
      assertFalse(field4.equals((Object)field0));
      assertFalse(field4.equals((Object)field1));
      assertNotSame(field4, field0);
      assertSame(field4, field2);
      assertSame(field4, field5);
      assertNotSame(field4, field1);
      assertSame(field4, field3);
      
      Field field6 = alumniGlossaryFields0.getEmployersInAcademy();
      assertNull(field6.getDescription());
      assertNull(field6.getName());
      assertFalse(field6.equals((Object)field5));
      assertFalse(field6.equals((Object)field2));
      assertFalse(field6.equals((Object)field1));
      assertFalse(field6.equals((Object)field3));
      assertFalse(field6.equals((Object)field4));
      assertNotNull(field6);
      assertNotSame(field6, field5);
      assertNotSame(field6, field2);
      assertNotSame(field6, field1);
      assertNotSame(field6, field3);
      assertNotSame(field6, field4);
      assertSame(field6, field0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(field0).toString();
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields(field0, field0, field0, field0, field0, field0);
      assertNotNull(alumniGlossaryFields0);
      
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field2).toString();
      alumniGlossaryFields0.employersInGovernment = field2;
      assertNull(alumniGlossaryFields0.employersInGovernment.getName());
      assertNull(alumniGlossaryFields0.employersInGovernment.getDescription());
      
      alumniGlossaryFields0.setConsolidatedEmployers(field1);
      alumniGlossaryFields0.setEmployersInAcademy(alumniGlossaryFields0.employersInGovernment);
      Field field3 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field3).toString();
      alumniGlossaryFields0.setEmployersInAcademy(field3);
      alumniGlossaryFields0.setEmployersInOngs(alumniGlossaryFields0.employersInGovernment);
      Field field4 = mock(Field.class, new ViolatedAssumptionAnswer());
      alumniGlossaryFields0.setConsolidatedEmployers(field4);
      Field field5 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(field5).toString();
      alumniGlossaryFields0.setEmployersInOngs(field5);
      Field field6 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field6.getDescription());
      assertNull(field6.getName());
      assertFalse(field6.equals((Object)field4));
      assertFalse(field6.equals((Object)field1));
      assertFalse(field6.equals((Object)field2));
      assertFalse(field6.equals((Object)field3));
      assertFalse(field6.equals((Object)field5));
      assertNotNull(field6);
      assertNotSame(field6, field4);
      assertSame(field6, field0);
      assertNotSame(field6, field1);
      assertNotSame(field6, field2);
      assertNotSame(field6, field3);
      assertNotSame(field6, field5);
      
      Field field7 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field7.getDescription());
      assertNull(field7.getName());
      assertFalse(field7.equals((Object)field3));
      assertFalse(field7.equals((Object)field1));
      assertFalse(field7.equals((Object)field4));
      assertFalse(field7.equals((Object)field2));
      assertFalse(field7.equals((Object)field5));
      assertNotNull(field7);
      assertNotSame(field7, field3);
      assertSame(field7, field0);
      assertNotSame(field7, field1);
      assertNotSame(field7, field4);
      assertNotSame(field7, field2);
      assertNotSame(field7, field5);
      assertSame(field7, field6);
      
      alumniGlossaryFields0.setEmployersInIndustry(field6);
      assertNull(field6.getDescription());
      assertNull(field6.getName());
      assertFalse(field6.equals((Object)field4));
      assertFalse(field6.equals((Object)field1));
      assertFalse(field6.equals((Object)field2));
      assertFalse(field6.equals((Object)field3));
      assertFalse(field6.equals((Object)field5));
      assertNotSame(field6, field4);
      assertSame(field6, field0);
      assertNotSame(field6, field1);
      assertNotSame(field6, field2);
      assertNotSame(field6, field3);
      assertSame(field6, field7);
      assertNotSame(field6, field5);
      
      alumniGlossaryFields0.setEmployersInIndustry((Field) null);
      Field field8 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field8.getName());
      assertNull(field8.getDescription());
      assertFalse(field8.equals((Object)field0));
      assertFalse(field8.equals((Object)field1));
      assertFalse(field8.equals((Object)field6));
      assertFalse(field8.equals((Object)field7));
      assertFalse(field8.equals((Object)field4));
      assertFalse(field8.equals((Object)field5));
      assertFalse(field8.equals((Object)field3));
      assertNotNull(field8);
      assertSame(field8, field2);
      assertNotSame(field8, field0);
      assertNotSame(field8, field1);
      assertNotSame(field8, field6);
      assertNotSame(field8, field7);
      assertNotSame(field8, field4);
      assertNotSame(field8, field5);
      assertNotSame(field8, field3);
      
      Field field9 = alumniGlossaryFields0.getEmployersInOngs();
      assertNull(field9.getDescription());
      assertNull(field9.getName());
      assertFalse(field9.equals((Object)field4));
      assertFalse(field9.equals((Object)field6));
      assertFalse(field9.equals((Object)field1));
      assertFalse(field9.equals((Object)field7));
      assertFalse(field9.equals((Object)field2));
      assertFalse(field9.equals((Object)field3));
      assertFalse(field9.equals((Object)field0));
      assertFalse(field9.equals((Object)field8));
      assertNotNull(field9);
      assertNotSame(field9, field4);
      assertNotSame(field9, field6);
      assertNotSame(field9, field1);
      assertNotSame(field9, field7);
      assertNotSame(field9, field2);
      assertNotSame(field9, field3);
      assertNotSame(field9, field0);
      assertNotSame(field9, field8);
      assertSame(field9, field5);
      
      Field field10 = alumniGlossaryFields0.getEmployersInOngs();
      assertNull(field10.getName());
      assertNull(field10.getDescription());
      assertFalse(field10.equals((Object)field6));
      assertFalse(field10.equals((Object)field4));
      assertFalse(field10.equals((Object)field7));
      assertFalse(field10.equals((Object)field2));
      assertFalse(field10.equals((Object)field1));
      assertFalse(field10.equals((Object)field0));
      assertFalse(field10.equals((Object)field3));
      assertFalse(field10.equals((Object)field8));
      assertNotNull(field10);
      assertNotSame(field10, field6);
      assertNotSame(field10, field4);
      assertNotSame(field10, field7);
      assertNotSame(field10, field2);
      assertSame(field10, field9);
      assertNotSame(field10, field1);
      assertSame(field10, field5);
      assertNotSame(field10, field0);
      assertNotSame(field10, field3);
      assertNotSame(field10, field8);
      
      Field field11 = alumniGlossaryFields0.getEmployersInAcademy();
      assertNull(field11.getName());
      assertNull(field11.getDescription());
      assertFalse(field11.equals((Object)field2));
      assertFalse(field11.equals((Object)field5));
      assertFalse(field11.equals((Object)field1));
      assertFalse(field11.equals((Object)field8));
      assertFalse(field11.equals((Object)field6));
      assertFalse(field11.equals((Object)field4));
      assertFalse(field11.equals((Object)field7));
      assertFalse(field11.equals((Object)field10));
      assertFalse(field11.equals((Object)field0));
      assertFalse(field11.equals((Object)field9));
      assertNotNull(field11);
      assertNotSame(field11, field2);
      assertNotSame(field11, field5);
      assertNotSame(field11, field1);
      assertNotSame(field11, field8);
      assertNotSame(field11, field6);
      assertNotSame(field11, field4);
      assertNotSame(field11, field7);
      assertSame(field11, field3);
      assertNotSame(field11, field10);
      assertNotSame(field11, field0);
      assertNotSame(field11, field9);
      
      alumniGlossaryFields0.setAlumniTracked(field11);
      assertNull(field11.getName());
      assertNull(field11.getDescription());
      assertFalse(field11.equals((Object)field2));
      assertFalse(field11.equals((Object)field5));
      assertFalse(field11.equals((Object)field1));
      assertFalse(field11.equals((Object)field8));
      assertFalse(field11.equals((Object)field6));
      assertFalse(field11.equals((Object)field4));
      assertFalse(field11.equals((Object)field7));
      assertFalse(field11.equals((Object)field10));
      assertFalse(field11.equals((Object)field0));
      assertFalse(field11.equals((Object)field9));
      assertNotSame(field11, field2);
      assertNotSame(field11, field5);
      assertNotSame(field11, field1);
      assertNotSame(field11, field8);
      assertNotSame(field11, field6);
      assertNotSame(field11, field4);
      assertNotSame(field11, field7);
      assertSame(field11, field3);
      assertNotSame(field11, field10);
      assertNotSame(field11, field0);
      assertNotSame(field11, field9);
      
      alumniGlossaryFields0.setAlumniTracked(field9);
      assertNull(field9.getDescription());
      assertNull(field9.getName());
      assertFalse(field9.equals((Object)field4));
      assertFalse(field9.equals((Object)field6));
      assertFalse(field9.equals((Object)field1));
      assertFalse(field9.equals((Object)field7));
      assertFalse(field9.equals((Object)field2));
      assertFalse(field9.equals((Object)field3));
      assertFalse(field9.equals((Object)field0));
      assertFalse(field9.equals((Object)field8));
      assertFalse(field9.equals((Object)field11));
      assertNotSame(field9, field4);
      assertNotSame(field9, field6);
      assertNotSame(field9, field1);
      assertNotSame(field9, field7);
      assertNotSame(field9, field2);
      assertNotSame(field9, field3);
      assertNotSame(field9, field0);
      assertNotSame(field9, field8);
      assertNotSame(field9, field11);
      assertSame(field9, field10);
      assertSame(field9, field5);
      
      Field field12 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field12.getDescription());
      assertNull(field12.getName());
      assertFalse(field12.equals((Object)field0));
      assertFalse(field12.equals((Object)field3));
      assertFalse(field12.equals((Object)field1));
      assertFalse(field12.equals((Object)field6));
      assertFalse(field12.equals((Object)field11));
      assertFalse(field12.equals((Object)field8));
      assertFalse(field12.equals((Object)field4));
      assertFalse(field12.equals((Object)field2));
      assertFalse(field12.equals((Object)field7));
      assertNotNull(field12);
      assertNotSame(field12, field0);
      assertSame(field12, field5);
      assertNotSame(field12, field3);
      assertNotSame(field12, field1);
      assertSame(field12, field9);
      assertNotSame(field12, field6);
      assertNotSame(field12, field11);
      assertNotSame(field12, field8);
      assertNotSame(field12, field4);
      assertNotSame(field12, field7);
      assertNotSame(field12, field2);
      assertSame(field12, field10);
      
      alumniGlossaryFields0.setEmployersInGovernment(field6);
      assertNull(field6.getDescription());
      assertNull(field6.getName());
      assertFalse(field6.equals((Object)field4));
      assertFalse(field6.equals((Object)field12));
      assertFalse(field6.equals((Object)field1));
      assertFalse(field6.equals((Object)field2));
      assertFalse(field6.equals((Object)field3));
      assertFalse(field6.equals((Object)field9));
      assertFalse(field6.equals((Object)field5));
      assertFalse(field6.equals((Object)field11));
      assertFalse(field6.equals((Object)field8));
      assertFalse(field6.equals((Object)field10));
      assertNotSame(field6, field4);
      assertSame(field6, field0);
      assertNotSame(field6, field12);
      assertNotSame(field6, field1);
      assertNotSame(field6, field2);
      assertNotSame(field6, field3);
      assertNotSame(field6, field9);
      assertSame(field6, field7);
      assertNotSame(field6, field5);
      assertNotSame(field6, field11);
      assertNotSame(field6, field8);
      assertNotSame(field6, field10);
      
      Field field13 = alumniGlossaryFields0.getEmployersInIndustry();
      assertNull(field13);
      
      alumniGlossaryFields0.setEmployersInGovernment(field6);
      assertNull(field6.getDescription());
      assertNull(field6.getName());
      assertFalse(field6.equals((Object)field4));
      assertFalse(field6.equals((Object)field12));
      assertFalse(field6.equals((Object)field1));
      assertFalse(field6.equals((Object)field2));
      assertFalse(field6.equals((Object)field3));
      assertFalse(field6.equals((Object)field9));
      assertFalse(field6.equals((Object)field5));
      assertFalse(field6.equals((Object)field11));
      assertFalse(field6.equals((Object)field8));
      assertFalse(field6.equals((Object)field10));
      assertNotSame(field6, field4);
      assertSame(field6, field0);
      assertNotSame(field6, field12);
      assertNotSame(field6, field1);
      assertNotSame(field6, field2);
      assertNotSame(field6, field3);
      assertNotSame(field6, field9);
      assertSame(field6, field7);
      assertNotSame(field6, field5);
      assertNotSame(field6, field11);
      assertNotSame(field6, field8);
      assertNotSame(field6, field10);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      assertNotNull(alumniGlossaryFields0);
      
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      alumniGlossaryFields0.employersInGovernment = null;
      alumniGlossaryFields0.employersInAcademy = null;
      alumniGlossaryFields0.employersInOngs = null;
      alumniGlossaryFields0.employersInOngs = null;
      alumniGlossaryFields0.setEmployersInIndustry((Field) null);
      alumniGlossaryFields0.setAlumniTracked((Field) null);
      alumniGlossaryFields0.setConsolidatedEmployers((Field) null);
      Field field0 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field0);
      
      Field field1 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNull(field1);
      
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      alumniGlossaryFields0.employersInAcademy = null;
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      alumniGlossaryFields0.setEmployersInOngs((Field) null);
      Field field2 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNull(field2);
      
      Field field3 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field3);
      
      Field field4 = alumniGlossaryFields0.getEmployersInOngs();
      assertNull(field4);
      
      Field field5 = alumniGlossaryFields0.getAlumniTracked();
      assertNull(field5);
      
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      Field field6 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNull(field6);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(field0).toString();
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields(field0, field0, field0, field1, field1, field0);
      alumniGlossaryFields0.alumniTracked = null;
      Field field2 = mock(Field.class, new ViolatedAssumptionAnswer());
      alumniGlossaryFields0.alumniTracked = field2;
      Field field3 = alumniGlossaryFields0.getEmployersInAcademy();
      alumniGlossaryFields0.setAlumniTracked(field3);
      alumniGlossaryFields0.setEmployersInAcademy(field3);
      alumniGlossaryFields0.alumniTracked = null;
      Field field4 = alumniGlossaryFields0.getConsolidatedEmployers();
      assertNotNull(field4);
      
      alumniGlossaryFields0.setAlumniTracked(field3);
      alumniGlossaryFields0.setAlumniTracked(field3);
      alumniGlossaryFields0.setAlumniTracked(field4);
      alumniGlossaryFields0.setEmployersInGovernment(field3);
      alumniGlossaryFields0.setConsolidatedEmployers(field4);
      Field field5 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNotNull(field5);
      
      Field field6 = alumniGlossaryFields0.getEmployersInIndustry();
      assertNotNull(field6);
      
      alumniGlossaryFields0.setEmployersInAcademy(field3);
      alumniGlossaryFields0.setAlumniTracked(field4);
      alumniGlossaryFields0.setConsolidatedEmployers(field5);
      assertSame(field5, field4);
      assertSame(field5, field6);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields((Field) null, (Field) null, (Field) null, (Field) null, (Field) null, (Field) null);
      alumniGlossaryFields0.consolidatedEmployers = null;
      alumniGlossaryFields0.getEmployersInAcademy();
      alumniGlossaryFields0.setEmployersInGovernment((Field) null);
      alumniGlossaryFields0.setEmployersInIndustry((Field) null);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Field field0 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field0).toString();
      AlumniGlossaryFields alumniGlossaryFields0 = new AlumniGlossaryFields(field0, field0, field0, field0, field0, field0);
      Field field1 = mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(field1).toString();
      alumniGlossaryFields0.employersInAcademy = field1;
      Field field2 = alumniGlossaryFields0.getEmployersInAcademy();
      Field field3 = alumniGlossaryFields0.getEmployersInGovernment();
      assertNotSame(field3, field2);
      assertNotNull(field3);
  }
}
