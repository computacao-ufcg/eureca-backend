/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:40:00 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectRetentionCSV_ESTest extends SubjectRetentionCSV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, (String) null, 0, (String) null, ";", (String) null, (-242), 451, 0, 0, 0, 0, 0, 2166, 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertNull(subjectRetentionCSV0.getRegistration());
      assertEquals(451, subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-242), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2166, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      
      int int0 = subjectRetentionCSV0.getSuspendedTerms();
      assertNull(subjectRetentionCSV0.getRegistration());
      assertEquals(451, subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-242), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2166, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 6327, "", "", "", 6327, 6327, 6327, 6327, 6327, (-872), (-872), (-872), 0, 4501.6608349476);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(6327, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-872), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(6327, subjectRetentionCSV0.getIdealTerm());
      assertEquals(6327, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(6327, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(4501.6608349476, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-872), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(6327, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-872), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(6327, subjectRetentionCSV0.getOptionalCredits());
      
      int int0 = subjectRetentionCSV0.getSuspendedTerms();
      assertEquals(6327, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-872), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(6327, subjectRetentionCSV0.getIdealTerm());
      assertEquals(6327, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(6327, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(4501.6608349476, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-872), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(6327, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-872), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(6327, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-872), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("{k-HG4hAB0[Hp;kED", "/9x,&^x]FWB]@Hi", (-1), "/9x,&^x]FWB]@Hi", (String) null, "/9x,&^x]FWB]@Hi", (-1), 2391, 0, 2391, 0, 0, (-1), 0, 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertNull(subjectRetentionCSV0.getSubjectName());
      assertEquals("/9x,&^x]FWB]@Hi", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2391, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("{k-HG4hAB0[Hp;kED", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("/9x,&^x]FWB]@Hi", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2391, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getIdealTerm());
      assertEquals("/9x,&^x]FWB]@Hi", subjectRetentionCSV0.getRegistration());
      
      String string0 = subjectRetentionCSV0.getSubjectName();
      assertNull(string0);
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertNull(subjectRetentionCSV0.getSubjectName());
      assertEquals("/9x,&^x]FWB]@Hi", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2391, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("{k-HG4hAB0[Hp;kED", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("/9x,&^x]FWB]@Hi", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2391, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getIdealTerm());
      assertEquals("/9x,&^x]FWB]@Hi", subjectRetentionCSV0.getRegistration());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 2709, "", "Xgg){y", "Xgg){y", 2709, (-1791), (-1791), (-1730), (-1730), 2717, 2717, (-1679), (-1), 731.4);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(2717, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1730), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1791), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1791), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2717, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1679), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2709, subjectRetentionCSV0.getIdealTerm());
      assertEquals(731.4, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1730), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(2709, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("Xgg){y", subjectRetentionCSV0.getRegistration());
      assertEquals("Xgg){y", subjectRetentionCSV0.getSubjectName());
      
      String string0 = subjectRetentionCSV0.getSubjectName();
      assertNotNull(string0);
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(2717, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1730), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1791), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1791), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2717, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1679), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2709, subjectRetentionCSV0.getIdealTerm());
      assertEquals(731.4, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1730), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(2709, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("Xgg){y", subjectRetentionCSV0.getRegistration());
      assertEquals("Xgg){y", subjectRetentionCSV0.getSubjectName());
      assertEquals("Xgg){y", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("x", "~@LlBp;]jQ??S+l9hz", (-515), "x", ">U]GmyunHu", ">U]GmyunHu", (-1630), (-1630), 59, (-2011), (-2011), 59, 0, (-1630), (-1630), (-2011));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-2011), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(59, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2011), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1630), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1630), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2011.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(">U]GmyunHu", subjectRetentionCSV0.getRegistration());
      assertEquals("x", subjectRetentionCSV0.getCourseCode());
      assertEquals("~@LlBp;]jQ??S+l9hz", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1630), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-515), subjectRetentionCSV0.getIdealTerm());
      assertEquals(">U]GmyunHu", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1630), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("x", subjectRetentionCSV0.getSubjectCode());
      assertEquals(59, subjectRetentionCSV0.getCompletedTerms());
      
      String string0 = subjectRetentionCSV0.getSubjectCode();
      assertNotNull(string0);
      assertEquals((-2011), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(59, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2011), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1630), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1630), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2011.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(">U]GmyunHu", subjectRetentionCSV0.getRegistration());
      assertEquals("x", subjectRetentionCSV0.getCourseCode());
      assertEquals("~@LlBp;]jQ??S+l9hz", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1630), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-515), subjectRetentionCSV0.getIdealTerm());
      assertEquals(">U]GmyunHu", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1630), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("x", subjectRetentionCSV0.getSubjectCode());
      assertEquals(59, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-2358), "", "", "", 13, (-2358), 13, (-2358), (-2358), 13, 13, 13, 0, 13);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(13, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(13, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(13, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(13.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(13, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(13, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2358), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2358), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2358), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2358), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      
      String string0 = subjectRetentionCSV0.getSubjectCode();
      assertNotNull(string0);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(13, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(13, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(13, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(13.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(13, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(13, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2358), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2358), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2358), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2358), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("bd>&<CB0e", "bd>&<CB0e", 0, ";", "bd>&<CB0e", "~a8AkgN", 1, 0, 1, 0, 1, 0, 1, 0, 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("bd>&<CB0e", subjectRetentionCSV0.getCourseCode());
      assertEquals("~a8AkgN", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(";", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("bd>&<CB0e", subjectRetentionCSV0.getSubjectName());
      assertEquals("bd>&<CB0e", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      
      String string0 = subjectRetentionCSV0.getRegistration();
      assertNotNull(string0);
      assertEquals(1, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("bd>&<CB0e", subjectRetentionCSV0.getCourseCode());
      assertEquals("~a8AkgN", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(";", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("bd>&<CB0e", subjectRetentionCSV0.getSubjectName());
      assertEquals("bd>&<CB0e", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("~a8AkgN", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV(";", "FH.Enu[sJ8p]^#<1", 1673, "FH.Enu[sJ8p]^#<1", "M%IF=AS, GXh", "", 1673, 2730, 0, 1673, 2730, 1, 1, 1, 2730, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("FH.Enu[sJ8p]^#<1", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(";", subjectRetentionCSV0.getCourseCode());
      assertEquals("FH.Enu[sJ8p]^#<1", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2730, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(2730, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1673, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2730, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("M%IF=AS, GXh", subjectRetentionCSV0.getSubjectName());
      assertEquals(1673, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1673, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      
      int int0 = subjectRetentionCSV0.getOptionalCredits();
      assertEquals(1, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("FH.Enu[sJ8p]^#<1", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(";", subjectRetentionCSV0.getCourseCode());
      assertEquals("FH.Enu[sJ8p]^#<1", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2730, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(2730, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1673, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2730, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("M%IF=AS, GXh", subjectRetentionCSV0.getSubjectName());
      assertEquals(1673, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1673, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 6327, "", "", "", 6327, 6327, 6327, 6327, 6327, (-872), (-872), (-872), 0, 4501.6608349476);
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-872), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(6327, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-872), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(6327, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-872), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(6327, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(6327, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(6327, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(4501.6608349476, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(6327, subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      
      int int0 = subjectRetentionCSV0.getOptionalCredits();
      assertEquals((-872), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(6327, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-872), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(6327, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-872), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(6327, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(6327, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(6327, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(4501.6608349476, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(6327, subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(6327, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("&m{@nf:qk-*", "&m{@nf:qk-*", (-1100), "j(", "v4", "v4", (-657), (-657), 0, (-1100), (-657), 0, (-1261), (-2340), 0, 1101.8601193547668);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("&m{@nf:qk-*", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-657), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("v4", subjectRetentionCSV0.getRegistration());
      assertEquals((-1261), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2340), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1100), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-657), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-657), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1101.8601193547668, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1100), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("v4", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("&m{@nf:qk-*", subjectRetentionCSV0.getCourseCode());
      assertEquals("j(", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      
      int int0 = subjectRetentionCSV0.getMobilityTerms();
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("&m{@nf:qk-*", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-657), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("v4", subjectRetentionCSV0.getRegistration());
      assertEquals((-1261), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2340), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1100), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-657), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-657), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1101.8601193547668, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1100), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("v4", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("&m{@nf:qk-*", subjectRetentionCSV0.getCourseCode());
      assertEquals("j(", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("feh[tTfeG%b", "feh[tTfeG%b", 761, "feh[tTfeG%b", ";", "*CDNbN*vtGl,s", 761, 0, 761, 761, 0, (-772), 1288, (-772), 1288, 1261.3094);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1288, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(761, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(761, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1261.3094, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-772), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals(1288, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-772), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(761, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("feh[tTfeG%b", subjectRetentionCSV0.getCourseCode());
      assertEquals("*CDNbN*vtGl,s", subjectRetentionCSV0.getRegistration());
      assertEquals("feh[tTfeG%b", subjectRetentionCSV0.getSubjectCode());
      assertEquals(761, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("feh[tTfeG%b", subjectRetentionCSV0.getCurriculumCode());
      
      int int0 = subjectRetentionCSV0.getMobilityTerms();
      assertEquals(1288, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(761, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(761, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1261.3094, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-772), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals(1288, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-772), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(761, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("feh[tTfeG%b", subjectRetentionCSV0.getCourseCode());
      assertEquals("*CDNbN*vtGl,s", subjectRetentionCSV0.getRegistration());
      assertEquals("feh[tTfeG%b", subjectRetentionCSV0.getSubjectCode());
      assertEquals(761, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("feh[tTfeG%b", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1288, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "o#F[", "", "+XeR6i,my+j", 0, 0, (-1), 0, 0, (-1), 0, 0, (-8), (-1));
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      
      int int0 = subjectRetentionCSV0.getMandatoryCredits();
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1451, "", "", "Z>l7Q;b8Z+30eMWVXd&", (-1), (-1), (-465), (-465), 741, 1203, (-2495), 2064, (-1), (-1170.167));
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1203, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2064, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("Z>l7Q;b8Z+30eMWVXd&", subjectRetentionCSV0.getRegistration());
      assertEquals((-465), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1451, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2495), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1170.167), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(741, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-465), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      
      int int0 = subjectRetentionCSV0.getMandatoryCredits();
      assertEquals(1203, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2064, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("Z>l7Q;b8Z+30eMWVXd&", subjectRetentionCSV0.getRegistration());
      assertEquals((-465), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1451, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2495), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1170.167), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(741, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-465), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-1), "", "", "", (-1), 2380, 561, 0, (-2961), 0, 561, 0, 0, (-2961));
      assertNotNull(subjectRetentionCSV0);
      assertEquals(2380, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(561, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2961), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(561, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2961.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      
      int int0 = subjectRetentionCSV0.getInstitutionalTerms();
      assertEquals(2380, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(561, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2961), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(561, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2961.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "", "V93e:Lp>'iC^]P.TO", "", 0, (-1), 0, 0, (-1), (-2064), 0, (-1), 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("V93e:Lp>'iC^]P.TO", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2064), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      
      int int0 = subjectRetentionCSV0.getInstitutionalTerms();
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("V93e:Lp>'iC^]P.TO", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2064), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "", "V93e:Lp>'iC^]P.TO", "", 0, (-1), 0, 0, (-1), (-2064), 0, (-1), 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("V93e:Lp>'iC^]P.TO", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2064), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      
      int int0 = subjectRetentionCSV0.getIdealTerm();
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("V93e:Lp>'iC^]P.TO", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2064), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("\\5O~96\"CDM6BNvryDo", "\\5O~96\"CDM6BNvryDo", 2581, "", "\\5O~96\"CDM6BNvryDo", "", 0, (-1), 0, (-1), (-2705), 2581, 0, 592, 592, (-2705));
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2705.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2581, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2705), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2581, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("\\5O~96\"CDM6BNvryDo", subjectRetentionCSV0.getSubjectName());
      assertEquals(592, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("\\5O~96\"CDM6BNvryDo", subjectRetentionCSV0.getCourseCode());
      assertEquals("\\5O~96\"CDM6BNvryDo", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(592, subjectRetentionCSV0.getMobilityTerms());
      
      int int0 = subjectRetentionCSV0.getIdealTerm();
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2705.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2581, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2705), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2581, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("\\5O~96\"CDM6BNvryDo", subjectRetentionCSV0.getSubjectName());
      assertEquals(592, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("\\5O~96\"CDM6BNvryDo", subjectRetentionCSV0.getCourseCode());
      assertEquals("\\5O~96\"CDM6BNvryDo", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(592, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2581, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("e;<=(7Ua$I", "e;<=(7Ua$I", 2294, "e;<=(7Ua$I", "e;<=(7Ua$I", "", (-1), 2294, 2294, 917, 917, (-1), 0, (-1), 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2294, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(917, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2294, subjectRetentionCSV0.getIdealTerm());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(917, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getSubjectName());
      assertEquals(2294, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      
      double double0 = subjectRetentionCSV0.getGpa();
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2294, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(917, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2294, subjectRetentionCSV0.getIdealTerm());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(917, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getSubjectName());
      assertEquals(2294, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("e;<=(7Ua$I", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("vX*5wx-^95F", "vX*5wx-^95F", (-907), "vX*5wx-^95F", "vX*5wx-^95F", "vX*5wx-^95F", (-907), 0, (-907), 1294, 0, 0, (-2216), 1, (-1), 1294);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1294.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-907), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectName());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-907), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2216), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCourseCode());
      assertEquals((-907), subjectRetentionCSV0.getIdealTerm());
      assertEquals(1294, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCurriculumCode());
      
      double double0 = subjectRetentionCSV0.getGpa();
      assertEquals(1294.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-907), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectName());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-907), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2216), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCourseCode());
      assertEquals((-907), subjectRetentionCSV0.getIdealTerm());
      assertEquals(1294, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1294.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "", "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, (-142.0));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-142.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      
      int int0 = subjectRetentionCSV0.getElectiveCredits();
      assertEquals((-142.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "o#F[", "", "+XeR6i,my+j", 0, 0, (-1), 0, 0, (-1), 0, 0, (-8), (-1));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      
      subjectRetentionCSV0.setElectiveCredits((-1));
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      
      int int0 = subjectRetentionCSV0.getElectiveCredits();
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("&H3^)(+^L8sCE", "<NgMXix%Dx-=O5 _DvK", 0, "&H3^)(+^L8sCE", "", "", 115, 0, 0, (-1), (-1602), 0, 115, 0, 0, 1.0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(115, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("&H3^)(+^L8sCE", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1602), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("&H3^)(+^L8sCE", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("<NgMXix%Dx-=O5 _DvK", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(115, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      
      subjectRetentionCSV0.setCurriculumCode((String) null);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(115, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("&H3^)(+^L8sCE", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1602), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("&H3^)(+^L8sCE", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(115, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      
      String string0 = subjectRetentionCSV0.getCurriculumCode();
      assertNull(string0);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(115, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("&H3^)(+^L8sCE", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1602), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("&H3^)(+^L8sCE", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(115, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("RCe_;4:pTpT", "RCe_;4:pTpT", (-296), "RCe_;4:pTpT", "RCe_;4:pTpT", "", 1459, 0, 0, 1459, (-296), (-296), 1, 1, (-296), 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getSubjectName());
      assertEquals((-296), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1459, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1459, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-296), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-296), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getSubjectCode());
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-296), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      
      String string0 = subjectRetentionCSV0.getCurriculumCode();
      assertNotNull(string0);
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getSubjectName());
      assertEquals((-296), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1459, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1459, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-296), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-296), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getSubjectCode());
      assertEquals("RCe_;4:pTpT", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-296), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("RCe_;4:pTpT", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", "", (-2419), (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", "/vv>z", (-1), (-1), (-1), (-2419), (-1), (-2077), 0, 0, (-2077), (-2419));
      assertNotNull(subjectRetentionCSV0);
      assertEquals("/vv>z", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-2419), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2077), subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2419), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2077), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2419.0), subjectRetentionCSV0.getGpa(), 0.01);
      
      subjectRetentionCSV0.setCourseCode((String) null);
      assertEquals("/vv>z", subjectRetentionCSV0.getRegistration());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-2419), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2077), subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2419), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2077), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2419.0), subjectRetentionCSV0.getGpa(), 0.01);
      
      String string0 = subjectRetentionCSV0.getCourseCode();
      assertNull(string0);
      assertEquals("/vv>z", subjectRetentionCSV0.getRegistration());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-2419), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2077), subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2419), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2077), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2419.0), subjectRetentionCSV0.getGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("vX*5wx-^95F", "vX*5wx-^95F", (-907), "vX*5wx-^95F", "vX*5wx-^95F", "vX*5wx-^95F", (-907), 0, (-907), 1294, 0, 0, (-2216), 1, (-1), 1294);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectName());
      assertEquals((-907), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1294, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-907), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1294.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCourseCode());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getRegistration());
      assertEquals((-2216), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-907), subjectRetentionCSV0.getIdealTerm());
      
      String string0 = subjectRetentionCSV0.getCourseCode();
      assertNotNull(string0);
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectName());
      assertEquals((-907), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1294, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-907), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1294.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getCourseCode());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getRegistration());
      assertEquals((-2216), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("vX*5wx-^95F", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-907), subjectRetentionCSV0.getIdealTerm());
      assertEquals("vX*5wx-^95F", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "", (String) null, "", 0, 1048, (-538), (-1), 0, 0, (-1), (-538), 3399, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1048, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-1), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(3399, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-538), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-538), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      
      int int0 = subjectRetentionCSV0.getCompletedTerms();
      assertEquals(1048, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-1), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(3399, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-538), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-538), subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-1), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV(";", "", (-1), (String) null, ";", "KiQ%L8", 0, (-1891), 486, 0, 0, (-988), (-1), (-1891), (-1891), (-540.0));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-1891), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-540.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-988), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1891), subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals("KiQ%L8", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getIdealTerm());
      assertEquals(486, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1891), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(";", subjectRetentionCSV0.getCourseCode());
      
      int int0 = subjectRetentionCSV0.getCompletedTerms();
      assertEquals((-1891), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-540.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-988), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1891), subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals("KiQ%L8", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getIdealTerm());
      assertEquals(486, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1891), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(";", subjectRetentionCSV0.getCourseCode());
      assertEquals((-988), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, (String) null, 0, (String) null, ";", (String) null, (-242), 451, 0, 0, 0, 0, 0, 2166, 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(451, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertNull(subjectRetentionCSV0.getRegistration());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals((-242), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(2166, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      
      int int0 = subjectRetentionCSV0.getComplementaryCredits();
      assertEquals(451, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertNull(subjectRetentionCSV0.getRegistration());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals((-242), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(2166, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", ";", 3003, ";", ";", "CbuitS", (-3612), 0, 3003, 3003, 595, 93, (-3612), 595, 1610, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals(";", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(595, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1610, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(";", subjectRetentionCSV0.getSubjectCode());
      assertEquals(93, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(3003, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3612), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(3003, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(595, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(3003, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3612), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals("CbuitS", subjectRetentionCSV0.getRegistration());
      
      int int0 = subjectRetentionCSV0.getComplementaryCredits();
      assertEquals(";", subjectRetentionCSV0.getSubjectName());
      assertEquals(";", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(595, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1610, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(";", subjectRetentionCSV0.getSubjectCode());
      assertEquals(93, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(3003, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3612), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(3003, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(595, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(3003, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3612), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals("CbuitS", subjectRetentionCSV0.getRegistration());
      assertEquals(595, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, (String) null, 0, "", "", "", 0, 0, 3314, 0, 0, 0, 3314, 0, 3314, 1732.929825);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(3314, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(3314, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1732.929825, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(3314, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      
      int int0 = subjectRetentionCSV0.getAttemptedCredits();
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(3314, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(3314, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1732.929825, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(3314, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertNull(subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("e+N(p ]L8PXlP}", "e+N(p ]L8PXlP}", 0, "", "a~VsE:U[)9L$", "a~VsE:U[)9L$", (-1), 0, 0, 579, 2965, (-1), 0, (-1), 0, 579);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(579.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("e+N(p ]L8PXlP}", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2965, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("a~VsE:U[)9L$", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals("e+N(p ]L8PXlP}", subjectRetentionCSV0.getCourseCode());
      assertEquals(579, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("a~VsE:U[)9L$", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      
      int int0 = subjectRetentionCSV0.getAttemptedCredits();
      assertEquals(579.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("e+N(p ]L8PXlP}", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-1), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2965, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("a~VsE:U[)9L$", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals("e+N(p ]L8PXlP}", subjectRetentionCSV0.getCourseCode());
      assertEquals(579, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("a~VsE:U[)9L$", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("Qem", "Qem", 0, "Qem", "05R!9E }U3daE6", ";hVi7WEq,C(p", 0, 2399, 1, (-1310), 0, 1, 0, 0, 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("Qem", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("Qem", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1310), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(2399, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("Qem", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(";hVi7WEq,C(p", subjectRetentionCSV0.getRegistration());
      assertEquals("05R!9E }U3daE6", subjectRetentionCSV0.getSubjectName());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      
      SubjectRetentionCSV subjectRetentionCSV1 = new SubjectRetentionCSV("", "Qem;Qem;0;Qem;05R!9E }U3daE6;;hVi7WEq,C(p;0;2399;1;-1310;0;1;0;0;0;0.0", 0, "", "IE;", "", 0, 0, 1, 1, 1851, 534, 1, (-2449), 1, 534);
      assertNotNull(subjectRetentionCSV1);
      assertFalse(subjectRetentionCSV1.equals((Object)subjectRetentionCSV0));
      assertEquals(1, subjectRetentionCSV1.getSuspendedTerms());
      assertEquals(1, subjectRetentionCSV1.getElectiveCredits());
      assertEquals("", subjectRetentionCSV1.getCourseCode());
      assertEquals("", subjectRetentionCSV1.getSubjectCode());
      assertEquals(534.0, subjectRetentionCSV1.getGpa(), 0.01);
      assertEquals("IE;", subjectRetentionCSV1.getSubjectName());
      assertEquals("Qem;Qem;0;Qem;05R!9E }U3daE6;;hVi7WEq,C(p;0;2399;1;-1310;0;1;0;0;0;0.0", subjectRetentionCSV1.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV1.getMandatoryCredits());
      assertEquals(1851, subjectRetentionCSV1.getComplementaryCredits());
      assertEquals(534, subjectRetentionCSV1.getCompletedTerms());
      assertEquals("", subjectRetentionCSV1.getRegistration());
      assertEquals(1, subjectRetentionCSV1.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV1.getIdealTerm());
      assertEquals((-2449), subjectRetentionCSV1.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV1.getAttemptedCredits());
      assertEquals(1, subjectRetentionCSV1.getMobilityTerms());
      
      int int0 = subjectRetentionCSV0.compareTo(subjectRetentionCSV1);
      assertFalse(subjectRetentionCSV0.equals((Object)subjectRetentionCSV1));
      assertFalse(subjectRetentionCSV1.equals((Object)subjectRetentionCSV0));
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("Qem", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("Qem", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1310), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(2399, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("Qem", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(";hVi7WEq,C(p", subjectRetentionCSV0.getRegistration());
      assertEquals("05R!9E }U3daE6", subjectRetentionCSV0.getSubjectName());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV1.getSuspendedTerms());
      assertEquals(1, subjectRetentionCSV1.getElectiveCredits());
      assertEquals("", subjectRetentionCSV1.getCourseCode());
      assertEquals("", subjectRetentionCSV1.getSubjectCode());
      assertEquals(534.0, subjectRetentionCSV1.getGpa(), 0.01);
      assertEquals("IE;", subjectRetentionCSV1.getSubjectName());
      assertEquals("Qem;Qem;0;Qem;05R!9E }U3daE6;;hVi7WEq,C(p;0;2399;1;-1310;0;1;0;0;0;0.0", subjectRetentionCSV1.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV1.getMandatoryCredits());
      assertEquals(1851, subjectRetentionCSV1.getComplementaryCredits());
      assertEquals(534, subjectRetentionCSV1.getCompletedTerms());
      assertEquals("", subjectRetentionCSV1.getRegistration());
      assertEquals(1, subjectRetentionCSV1.getOptionalCredits());
      assertEquals(0, subjectRetentionCSV1.getIdealTerm());
      assertEquals((-2449), subjectRetentionCSV1.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV1.getAttemptedCredits());
      assertEquals(1, subjectRetentionCSV1.getMobilityTerms());
      assertEquals(22, int0);
      assertNotSame(subjectRetentionCSV0, subjectRetentionCSV1);
      assertNotSame(subjectRetentionCSV1, subjectRetentionCSV0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 2709, "", "Xgg){y", "Xgg){y", 2709, (-1791), (-1791), (-1730), (-1730), 2717, 2717, (-1679), (-1), 731.4);
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-1791), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("Xgg){y", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2709, subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1791), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(731.4, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2717, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1730), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("Xgg){y", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1679), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2717, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2709, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1730), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      
      SubjectRetentionCSV subjectRetentionCSV1 = new SubjectRetentionCSV("Xgg){y", "", (-1679), "br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", "Xgg){y", 1481, 3233, 2717, 0, (-1399), 0, 0, 0, 0, 1102.5);
      assertNotNull(subjectRetentionCSV1);
      assertFalse(subjectRetentionCSV1.equals((Object)subjectRetentionCSV0));
      assertEquals(1481, subjectRetentionCSV1.getAttemptedCredits());
      assertEquals("Xgg){y", subjectRetentionCSV1.getCourseCode());
      assertEquals(0, subjectRetentionCSV1.getElectiveCredits());
      assertEquals("Xgg){y", subjectRetentionCSV1.getRegistration());
      assertEquals(0, subjectRetentionCSV1.getInstitutionalTerms());
      assertEquals(2717, subjectRetentionCSV1.getOptionalCredits());
      assertEquals(3233, subjectRetentionCSV1.getMandatoryCredits());
      assertEquals((-1679), subjectRetentionCSV1.getIdealTerm());
      assertEquals(1102.5, subjectRetentionCSV1.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV1.getCurriculumCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV1.getSubjectName());
      assertEquals(0, subjectRetentionCSV1.getMobilityTerms());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV1.getSubjectCode());
      assertEquals(0, subjectRetentionCSV1.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV1.getCompletedTerms());
      assertEquals((-1399), subjectRetentionCSV1.getComplementaryCredits());
      
      int int0 = subjectRetentionCSV0.compareTo(subjectRetentionCSV1);
      assertFalse(subjectRetentionCSV0.equals((Object)subjectRetentionCSV1));
      assertFalse(subjectRetentionCSV1.equals((Object)subjectRetentionCSV0));
      assertEquals((-1791), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("Xgg){y", subjectRetentionCSV0.getRegistration());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(2709, subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-1791), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(731.4, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2717, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1730), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("Xgg){y", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1679), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2717, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2709, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1730), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1481, subjectRetentionCSV1.getAttemptedCredits());
      assertEquals("Xgg){y", subjectRetentionCSV1.getCourseCode());
      assertEquals(0, subjectRetentionCSV1.getElectiveCredits());
      assertEquals("Xgg){y", subjectRetentionCSV1.getRegistration());
      assertEquals(0, subjectRetentionCSV1.getInstitutionalTerms());
      assertEquals(2717, subjectRetentionCSV1.getOptionalCredits());
      assertEquals(3233, subjectRetentionCSV1.getMandatoryCredits());
      assertEquals((-1679), subjectRetentionCSV1.getIdealTerm());
      assertEquals(1102.5, subjectRetentionCSV1.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV1.getCurriculumCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV1.getSubjectName());
      assertEquals(0, subjectRetentionCSV1.getMobilityTerms());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", subjectRetentionCSV1.getSubjectCode());
      assertEquals(0, subjectRetentionCSV1.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV1.getCompletedTerms());
      assertEquals((-1399), subjectRetentionCSV1.getComplementaryCredits());
      assertEquals((-99), int0);
      assertNotSame(subjectRetentionCSV0, subjectRetentionCSV1);
      assertNotSame(subjectRetentionCSV1, subjectRetentionCSV0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("h:O;f", "h:O;f", (-2471), (String) null, "TdbE+qWv[{m+", (String) null, (-2471), 0, 138, 138, 138, 1, 138, 0, 1, 1);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("h:O;f", subjectRetentionCSV0.getCourseCode());
      assertEquals("h:O;f", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(138, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2471), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-2471), subjectRetentionCSV0.getIdealTerm());
      assertEquals(138, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1, subjectRetentionCSV0.getMobilityTerms());
      assertNull(subjectRetentionCSV0.getRegistration());
      assertEquals(138, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("TdbE+qWv[{m+", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(138, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getCompletedTerms());
      
      // Undeclared exception!
      try { 
        subjectRetentionCSV0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-2358), "", "", "", 13, (-2358), 13, (-2358), (-2358), 13, 13, 13, 0, 13);
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-2358), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2358), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(13, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-2358), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(13, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2358), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(13, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(13, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(13, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(13.0, subjectRetentionCSV0.getGpa(), 0.01);
      
      // Undeclared exception!
      try { 
        subjectRetentionCSV0.compareTo("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectRetentionCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "", "V93e:Lp>'iC^]P.TO", "", 0, (-1), 0, 0, (-1), (-2064), 0, (-1), 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2064), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("V93e:Lp>'iC^]P.TO", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      
      String string0 = subjectRetentionCSV0.getRegistration();
      assertNotNull(string0);
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2064), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("V93e:Lp>'iC^]P.TO", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals((-1), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 0, "o#F[", "", "+XeR6i,my+j", 0, 0, (-1), 0, 0, (-1), 0, 0, (-8), (-1));
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      
      String string0 = subjectRetentionCSV0.getCurriculumCode();
      assertNotNull(string0);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-1), subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-8), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(0, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-1), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("o#F[", subjectRetentionCSV0.getSubjectCode());
      assertEquals("+XeR6i,my+j", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "4&", 0, "", "", "4&", 0, 2014, 0, 216, 0, 2014, 1612, 0, 0, 3073.1613);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(3073.1613, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("4&", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1612, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2014, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("4&", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(216, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(2014, subjectRetentionCSV0.getMandatoryCredits());
      
      String string0 = subjectRetentionCSV0.getCourseCode();
      assertNotNull(string0);
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(3073.1613, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("4&", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1612, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2014, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("4&", subjectRetentionCSV0.getRegistration());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(216, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(2014, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "!@.E_}Vg=(Ahr!<", 1263, (String) null, "3b.iArc8", "\"", 1263, (-1610), 0, (-3622), 0, 0, 1, 0, 0, 0);
      assertNotNull(subjectRetentionCSV0);
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1263, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1610), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1263, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("\"", subjectRetentionCSV0.getRegistration());
      assertEquals((-3622), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("3b.iArc8", subjectRetentionCSV0.getSubjectName());
      assertEquals("!@.E_}Vg=(Ahr!<", subjectRetentionCSV0.getCurriculumCode());
      assertNull(subjectRetentionCSV0.getCourseCode());
      
      String string0 = subjectRetentionCSV0.getSubjectCode();
      assertNull(string0);
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(0, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1263, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(0, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(0, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-1610), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1263, subjectRetentionCSV0.getIdealTerm());
      assertEquals(0, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(0.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(0, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("\"", subjectRetentionCSV0.getRegistration());
      assertEquals((-3622), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("3b.iArc8", subjectRetentionCSV0.getSubjectName());
      assertEquals("!@.E_}Vg=(Ahr!<", subjectRetentionCSV0.getCurriculumCode());
      assertNull(subjectRetentionCSV0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      
      int int0 = subjectRetentionCSV0.getCompletedTerms();
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      
      subjectRetentionCSV0.setAttemptedCredits(0);
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(0, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV(" 6:g#p%gi7", " 6:g#p%gi7", (-54), " 6:g#p%gi7", " 6:g#p%gi7", " 6:g#p%gi7", (-54), (-54), (-54), (-54), (-54), (-54), (-54), (-54), (-54), (-54));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-54), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-54), subjectRetentionCSV0.getIdealTerm());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-54), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCourseCode());
      assertEquals((-54), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-54), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-54), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectName());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getRegistration());
      assertEquals((-54), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-54), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-54), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-54), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-54.0), subjectRetentionCSV0.getGpa(), 0.01);
      
      int int0 = subjectRetentionCSV0.getIdealTerm();
      assertEquals((-54), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-54), subjectRetentionCSV0.getIdealTerm());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-54), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCourseCode());
      assertEquals((-54), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-54), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-54), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectName());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getRegistration());
      assertEquals((-54), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-54), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-54), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-54), subjectRetentionCSV0.getElectiveCredits());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-54.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-54), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      
      subjectRetentionCSV0.setInstitutionalTerms((-3));
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      
      subjectRetentionCSV0.setOptionalCredits((-605));
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-605), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      
      int int0 = subjectRetentionCSV0.getElectiveCredits();
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals(2026, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      
      int int0 = subjectRetentionCSV0.getOptionalCredits();
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      
      String string0 = subjectRetentionCSV0.toString();
      assertNotNull(string0);
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("null;0h1{o`;-2400;null;^p,eQy`\"BGBiMAI;;-2400;-2400;2026;2026;-605;2026;1998;-2400;-1;-2400.0", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      
      subjectRetentionCSV0.setMandatoryCredits((-3));
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      
      subjectRetentionCSV0.setSubjectName("gF\"dZ9Ai~E,0.H*}");
      assertEquals("gF\"dZ9Ai~E,0.H*}", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      
      subjectRetentionCSV0.setCompletedTerms(1560);
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      
      int int0 = subjectRetentionCSV0.getComplementaryCredits();
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      
      subjectRetentionCSV0.setSuspendedTerms(0);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(0, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("[)eV", "[)eV", 134, "[)eV", "[)eV", "[)eV", 134, 134, 134, 134, 134, 134, 134, 134, 134, 134);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(134, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("[)eV", subjectRetentionCSV0.getSubjectCode());
      assertEquals("[)eV", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(134, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("[)eV", subjectRetentionCSV0.getCourseCode());
      assertEquals(134, subjectRetentionCSV0.getIdealTerm());
      assertEquals(134, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("[)eV", subjectRetentionCSV0.getRegistration());
      assertEquals(134, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(134, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(134, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(134.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(134, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(134, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(134, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("[)eV", subjectRetentionCSV0.getSubjectName());
      
      int int0 = subjectRetentionCSV0.getAttemptedCredits();
      assertEquals(134, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("[)eV", subjectRetentionCSV0.getSubjectCode());
      assertEquals("[)eV", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(134, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("[)eV", subjectRetentionCSV0.getCourseCode());
      assertEquals(134, subjectRetentionCSV0.getIdealTerm());
      assertEquals(134, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals("[)eV", subjectRetentionCSV0.getRegistration());
      assertEquals(134, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(134, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(134, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(134.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(134, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(134, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(134, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("[)eV", subjectRetentionCSV0.getSubjectName());
      assertEquals(134, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      
      subjectRetentionCSV0.setGpa((-605));
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-605.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertNotNull(subjectRetentionCSV0);
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      
      subjectRetentionCSV0.setComplementaryCredits(15);
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertNull(subjectRetentionCSV0.getCourseCode());
      assertNull(subjectRetentionCSV0.getSubjectCode());
      assertEquals(15, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-2400.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      assertNotNull(subjectRetentionCSV0);
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      
      int int0 = subjectRetentionCSV0.getSuspendedTerms();
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      
      subjectRetentionCSV0.setMobilityTerms(1560);
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      assertNotNull(subjectRetentionCSV0);
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      
      int int0 = subjectRetentionCSV0.getMandatoryCredits();
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals("", subjectRetentionCSV0.getCourseCode());
      assertEquals("", subjectRetentionCSV0.getSubjectCode());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals("", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals("", subjectRetentionCSV0.getSubjectName());
      assertEquals("", subjectRetentionCSV0.getRegistration());
      assertEquals(1560, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV(" 6:g#p%gi7", " 6:g#p%gi7", (-54), " 6:g#p%gi7", " 6:g#p%gi7", " 6:g#p%gi7", (-54), (-54), (-54), (-54), (-54), (-54), (-54), (-54), (-54), (-54));
      assertNotNull(subjectRetentionCSV0);
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectCode());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectName());
      assertEquals((-54), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-54), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-54), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-54), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-54), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-54), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getRegistration());
      assertEquals((-54), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-54), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-54), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-54), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-54.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCourseCode());
      
      double double0 = subjectRetentionCSV0.getGpa();
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCurriculumCode());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectCode());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getSubjectName());
      assertEquals((-54), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-54), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-54), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-54), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-54), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-54), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getRegistration());
      assertEquals((-54), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-54), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-54), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-54), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-54.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(" 6:g#p%gi7", subjectRetentionCSV0.getCourseCode());
      assertEquals((-54.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      assertEquals("", subjectRetentionCSV0.getRegistration());
      
      subjectRetentionCSV0.setRegistration((String) null);
      subjectRetentionCSV0.getRegistration();
      assertEquals((-1), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-605), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(2026, subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-2400), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(2026, subjectRetentionCSV0.getCompletedTerms());
      assertEquals("0h1{o`", subjectRetentionCSV0.getCurriculumCode());
      assertEquals((-2400), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-2400), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-2400), subjectRetentionCSV0.getIdealTerm());
      assertEquals(1998, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(2026, subjectRetentionCSV0.getOptionalCredits());
      assertEquals("^p,eQy`\"BGBiMAI", subjectRetentionCSV0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      subjectRetentionCSV0.getSubjectName();
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV((String) null, "0h1{o`", (-2400), (String) null, "^p,eQy`\"BGBiMAI", "", (-2400), (-2400), 2026, 2026, (-605), 2026, 1998, (-2400), (-1), (-2400));
      subjectRetentionCSV0.setIdealTerm(0);
      assertEquals(0, subjectRetentionCSV0.getIdealTerm());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      subjectRetentionCSV0.setSubjectCode("");
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3.0), subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals((-3), subjectRetentionCSV0.getMobilityTerms());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      int int0 = subjectRetentionCSV0.getInstitutionalTerms();
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, int0);
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", (-3), "", "", "", (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3), (-3));
      int int0 = subjectRetentionCSV0.getMobilityTerms();
      assertEquals((-3), subjectRetentionCSV0.getComplementaryCredits());
      assertEquals((-3), subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals((-3), subjectRetentionCSV0.getAttemptedCredits());
      assertEquals((-3), subjectRetentionCSV0.getSuspendedTerms());
      assertEquals((-3), subjectRetentionCSV0.getOptionalCredits());
      assertEquals((-3), subjectRetentionCSV0.getIdealTerm());
      assertEquals((-3), int0);
      assertEquals((-3), subjectRetentionCSV0.getMandatoryCredits());
      assertEquals((-3), subjectRetentionCSV0.getCompletedTerms());
      assertEquals((-3), subjectRetentionCSV0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SubjectRetentionCSV subjectRetentionCSV0 = new SubjectRetentionCSV("", "", 1560, "", "", "", 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560);
      subjectRetentionCSV0.compareTo(subjectRetentionCSV0);
      assertEquals(1560.0, subjectRetentionCSV0.getGpa(), 0.01);
      assertEquals(1560, subjectRetentionCSV0.getMobilityTerms());
      assertEquals(1560, subjectRetentionCSV0.getAttemptedCredits());
      assertEquals(1560, subjectRetentionCSV0.getOptionalCredits());
      assertEquals(1560, subjectRetentionCSV0.getCompletedTerms());
      assertEquals(1560, subjectRetentionCSV0.getElectiveCredits());
      assertEquals(1560, subjectRetentionCSV0.getInstitutionalTerms());
      assertEquals(1560, subjectRetentionCSV0.getSuspendedTerms());
      assertEquals(1560, subjectRetentionCSV0.getMandatoryCredits());
      assertEquals(1560, subjectRetentionCSV0.getComplementaryCredits());
      assertEquals(1560, subjectRetentionCSV0.getIdealTerm());
  }
}
