/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:36:25 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TeacherStatisticsSummary_ESTest extends TeacherStatisticsSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(2785, 2785, 2785, 2785, 2785, 2785, 2785, (-2745.292216400338), 122.6403764435, (-2745.292216400338), 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(2785.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-2745.292216400338), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2785, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2785, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2785.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2785, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2785.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-2745.292216400338), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2785.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(122.6403764435, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      
      int int0 = teacherStatisticsSummary0.getTotalEnrolled();
      assertEquals(2785.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-2745.292216400338), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2785, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2785, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2785.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2785, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2785.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-2745.292216400338), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2785.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(122.6403764435, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(2785, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      
      teacherStatisticsSummary0.setTotalEnrolled((-3326));
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals((-3326), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      
      int int0 = teacherStatisticsSummary0.getTotalEnrolled();
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals((-3326), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-3326), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1257, 455, 455, 117.63465721637, 1.0, 1257, 1257, 1257, 1.0, (-1930.0916737653506), 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getSuspendedRate();
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0, (-40.56216776983), 0, (-40.56216776983), 1.0, 1.0, 1.0, 0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-40.56216776983), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-40.56216776983), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      
      teacherStatisticsSummary0.setSuspendedRate((-1134.2747924628554));
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-40.56216776983), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-40.56216776983), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1134.2747924628554), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getSuspendedRate();
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-40.56216776983), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-40.56216776983), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1134.2747924628554), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1134.2747924628554), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 2837.70069657, 0, (-634.624411514491), 2837.70069657, (-713.6), 0, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      
      teacherStatisticsSummary0.setSucceededRate(0.0);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      
      double double0 = teacherStatisticsSummary0.getSucceededRate();
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-1), (-2042), (-2042), 0.0, (-1298.90962313333), (-1), (-2042), (-1), 0.0, 0.0, (-1042.3766));
      assertNotNull(teacherStatisticsSummary0);
      assertEquals((-1.0), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1042.3766), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-1), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-2042), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-1298.90962313333), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-2042.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-2042), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getSucceededRate();
      assertEquals((-1.0), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1042.3766), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-1), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-2042), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-1298.90962313333), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-2042.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-2042), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, (-1182), 1.0, (-251.22), 1253.5125287512, (-1182), (-246.785044497291), 1.0, 4135.4, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(1253.5125287512, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-251.22), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-246.785044497291), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(4135.4, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1182), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-1182.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      
      int int0 = teacherStatisticsSummary0.getSubjectsCount();
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(1253.5125287512, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-251.22), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-246.785044497291), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(4135.4, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1182), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-1182.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-82), (-90), 0, (-90), (-200.405454), (-82), 0, 641.9, (-200.405454), 641.9, (-645.157));
      assertNotNull(teacherStatisticsSummary0);
      assertEquals((-200.405454), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(641.9, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-645.157), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-90.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-200.405454), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-90), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-82), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-82.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(641.9, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      
      int int0 = teacherStatisticsSummary0.getSubjectsCount();
      assertEquals((-200.405454), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(641.9, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-645.157), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-90.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-200.405454), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-90), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-82), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-82.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(641.9, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-82), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, (-2061), (-431), (-2061), 0.0, 0.0, 0.0, 0, 0.0, 0.0, (-2531.59));
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-2531.59), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-2061), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-2061.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-431), teacherStatisticsSummary0.getTotalEnrolled());
      
      double double0 = teacherStatisticsSummary0.getOngoingRate();
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-2531.59), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-2061), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-2061.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-431), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 2837.70069657, 0, (-634.624411514491), 2837.70069657, (-713.6), 0, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      
      teacherStatisticsSummary0.setOngoingRate(1.0);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      
      double double0 = teacherStatisticsSummary0.getOngoingRate();
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 2837.70069657, 0, (-634.624411514491), 2837.70069657, (-713.6), 0, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getFailedDueToGradeRate();
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-3628), (-3628), (-519), (-519), (-3628), (-1.0), (-3628), 1175.5, 0.0, 1175.5, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(1175.5, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-3628.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-519.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-3628), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1175.5, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-3628.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-519), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-3628), teacherStatisticsSummary0.getClassesCount());
      
      double double0 = teacherStatisticsSummary0.getFailedDueToGradeRate();
      assertEquals(1175.5, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-3628.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-519.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-3628), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1175.5, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-3628.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-519), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-3628), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(2205, 0, 0, 2205, 715.287483866, (-271.911), (-271.911), 0.0, (-2533.0093), 2205, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2205.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(715.287483866, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2205.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-271.911), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-2533.0093), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-271.911), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2205, teacherStatisticsSummary0.getSubjectsCount());
      
      double double0 = teacherStatisticsSummary0.getFailedDueToAbsencesRate();
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2205.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(715.287483866, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2205.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-271.911), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-2533.0093), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-271.911), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2205, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(715.287483866, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-1197), (-1197), (-1197), 1.0, (-1197), 1546.93, (-1197), 1.0, (-1197), 737.995800632328, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1197.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-1197), teacherStatisticsSummary0.getClassesCount());
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1197), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1546.93, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(737.995800632328, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1197.0), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1197.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1197), teacherStatisticsSummary0.getTotalEnrolled());
      
      double double0 = teacherStatisticsSummary0.getFailedDueToAbsencesRate();
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1197.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-1197), teacherStatisticsSummary0.getClassesCount());
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1197), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1546.93, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(737.995800632328, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-1197.0), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1197.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1197), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-1197.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-1312), (-1312), (-1312), 697.1448, 1.0, 697.1448, 1.0, 1.0, 10.892, 0.0, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1312), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(697.1448, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(697.1448, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1312), teacherStatisticsSummary0.getClassesCount());
      assertEquals(10.892, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-1312), teacherStatisticsSummary0.getTotalEnrolled());
      
      double double0 = teacherStatisticsSummary0.getExemptedRate();
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1312), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(697.1448, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(697.1448, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1312), teacherStatisticsSummary0.getClassesCount());
      assertEquals(10.892, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-1312), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1257, 455, 455, 117.63465721637, 1.0, 1257, 1257, 1257, 1.0, (-1930.0916737653506), 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      
      teacherStatisticsSummary0.setExemptedRate(1257);
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1257.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      
      double double0 = teacherStatisticsSummary0.getExemptedRate();
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1257.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(1257.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-3447), (-3447), (-3447), 311.0069553789, 311.0069553789, 311.0069553789, (-3447), 1972.41214295, 0.0, (-195.954772), 311.0069553789);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals((-3447), teacherStatisticsSummary0.getClassesCount());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(311.0069553789, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1972.41214295, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-3447), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-3447.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-3447), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-195.954772), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      
      teacherStatisticsSummary0.setClassesCount(2657);
      assertEquals(311.0069553789, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(311.0069553789, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1972.41214295, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-3447), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-3447.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-3447), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-195.954772), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2657, teacherStatisticsSummary0.getClassesCount());
      
      int int0 = teacherStatisticsSummary0.getClassesCount();
      assertEquals(311.0069553789, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(311.0069553789, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1972.41214295, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-3447), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-3447.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-3447), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(311.0069553789, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-195.954772), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2657, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2657, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-1143), (-1143), 1, 1, 3753.24706, 3753.24706, 0.0, (-1408.694829931), (-2383.692153), 3753.24706, (-1143));
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(3753.24706, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-2383.692153), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1143), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1143), teacherStatisticsSummary0.getClassesCount());
      assertEquals(3753.24706, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1408.694829931), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(3753.24706, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1143.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      
      int int0 = teacherStatisticsSummary0.getClassesCount();
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(3753.24706, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-2383.692153), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1143), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1143), teacherStatisticsSummary0.getClassesCount());
      assertEquals(3753.24706, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1408.694829931), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(3753.24706, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1143.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-1143), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1257, 455, 455, 117.63465721637, 1.0, 1257, 1257, 1257, 1.0, (-1930.0916737653506), 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      
      teacherStatisticsSummary0.setCancelledRate((-1930.0916737653506));
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getCancelledRate();
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1930.0916737653506), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 2837.70069657, 0, (-634.624411514491), 2837.70069657, (-713.6), 0, 0.0);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getAverageEnrollmentsPerClass();
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      assertNotNull(teacherStatisticsSummary0);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      
      teacherStatisticsSummary0.setAverageEnrollmentsPerClass((-476.2176018));
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-476.2176018), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      
      double double0 = teacherStatisticsSummary0.getAverageEnrollmentsPerClass();
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-476.2176018), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-476.2176018), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1257, 455, 455, 117.63465721637, 1.0, 1257, 1257, 1257, 1.0, (-1930.0916737653506), 0.0);
      double double0 = teacherStatisticsSummary0.getExemptedRate();
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1930.0916737653506), double0, 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1257, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      double double0 = teacherStatisticsSummary0.getCancelledRate();
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1257, 455, 455, 117.63465721637, 1.0, 1257, 1257, 1257, 1.0, (-1930.0916737653506), 0.0);
      int int0 = teacherStatisticsSummary0.getSubjectsCount();
      assertEquals(1257.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1257, int0);
      assertEquals((-1930.0916737653506), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(117.63465721637, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1257.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(455, teacherStatisticsSummary0.getClassesCount());
      assertEquals(1257.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      double double0 = teacherStatisticsSummary0.getFailedDueToAbsencesRate();
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 2837.70069657, 0, (-634.624411514491), 2837.70069657, (-713.6), 0, 0.0);
      double double0 = teacherStatisticsSummary0.getSucceededRate();
      assertEquals(2837.70069657, double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-713.6), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      int int0 = teacherStatisticsSummary0.getTotalEnrolled();
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, int0);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      
      teacherStatisticsSummary0.setFailedDueToAbsencesRate(2239.69581164);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      int int0 = teacherStatisticsSummary0.getClassesCount();
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, int0);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      double double0 = teacherStatisticsSummary0.getSuspendedRate();
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2239.69581164, double0, 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      
      teacherStatisticsSummary0.setCancelledRate(2239.69581164);
      double double0 = teacherStatisticsSummary0.getCancelledRate();
      assertEquals(2239.69581164, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      double double0 = teacherStatisticsSummary0.getAverageEnrollmentsPerClass();
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2239.69581164, double0, 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      double double0 = teacherStatisticsSummary0.getFailedDueToGradeRate();
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(2239.69581164, double0, 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      teacherStatisticsSummary0.setFailedDueToGradeRate(2239.69581164);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 2837.70069657, 0, (-634.624411514491), 2837.70069657, (-713.6), 0, 0.0);
      double double0 = teacherStatisticsSummary0.getOngoingRate();
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2837.70069657, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-713.6), double0, 0.01);
      assertEquals((-634.624411514491), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 2239.69581164, 0.0, 2239.69581164, 0, 2239.69581164, 2239.69581164, 0, 2239.69581164);
      teacherStatisticsSummary0.setSubjectsCount(0);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(2239.69581164, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2239.69581164, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
  }
}
