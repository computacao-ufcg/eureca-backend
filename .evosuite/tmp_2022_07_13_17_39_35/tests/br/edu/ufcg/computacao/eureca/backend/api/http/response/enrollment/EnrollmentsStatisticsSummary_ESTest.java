/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 13 21:26:13 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsStatisticsSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnrollmentsStatisticsSummary_ESTest extends EnrollmentsStatisticsSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 0.0, 0.0, 1.0, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageSubjectsCount();
      assertEquals(1.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(459.0, 459.0, 459.0, 505.6, 459.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageSubjectsCount();
      assertEquals(505.6, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(459.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(459.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(459.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(459.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 0.0, 629.41329361563, (-2682.5046557718715), 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm();
      assertEquals(629.41329361563, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-2682.5046557718715), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(1068.4860282485, (-2448.634985663172), (-2448.634985663172), 1068.4860282485, 1.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm();
      assertEquals(1.0, double0, 0.01);
      assertEquals((-2448.634985663172), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(1068.4860282485, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-2448.634985663172), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(1068.4860282485, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-1586.98971231383), (-1586.98971231383), (-1586.98971231383), 0.0, (-1586.98971231383));
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1586.98971231383), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-1586.98971231383), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-1586.98971231383), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-1586.98971231383), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-2873.22), 1536.809610367619, 1536.809610367619, 1536.809610367619, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject();
      assertEquals(1536.809610367619, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-2873.22), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(1536.809610367619, double0, 0.01);
      assertEquals(1536.809610367619, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerTerm();
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(3286.140503465, 3286.140503465, 3286.140503465, 3286.140503465, (-2757.3));
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerTerm();
      assertEquals(3286.140503465, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(3286.140503465, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(3286.140503465, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-2757.3), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(3286.140503465, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-65.3883), 0.0, 0.0, (-65.3883), 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerSubject();
      assertEquals((-65.3883), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-65.3883), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(3286.140503465, 3286.140503465, 3286.140503465, 3286.140503465, (-2757.3));
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerSubject();
      assertEquals((-2757.3), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(3286.140503465, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(3286.140503465, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(3286.140503465, double0, 0.01);
      assertEquals(3286.140503465, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-122.7), (-122.7), (-122.7), (-122.7), (-122.7));
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject();
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-122.7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-122.7), (-122.7), (-122.7), (-122.7), (-122.7));
      double double0 = enrollmentsStatisticsSummary0.getAverageSubjectsCount();
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-122.7), double0, 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-122.7), (-122.7), (-122.7), (-122.7), (-122.7));
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm();
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-122.7), double0, 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-122.7), (-122.7), (-122.7), (-122.7), (-122.7));
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerTerm();
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-122.7), double0, 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-122.7), (-122.7), (-122.7), (-122.7), (-122.7));
      String string0 = enrollmentsStatisticsSummary0.toString();
      assertEquals("EnrollmentsStatisticsSummaryResponse{, subjectsCount=-122.7, averageClassesPerDiscipline=-122.7, averageClassesPerPeriod=-122.7, averageEnrollmentsPerSubject=-122.7, averageEnrollmentsPerPeriod=-122.7}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-122.7), (-122.7), (-122.7), (-122.7), (-122.7));
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerSubject();
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-122.7), double0, 0.01);
      assertEquals((-122.7), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
  }
}
